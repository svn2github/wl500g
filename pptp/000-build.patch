--- pptp-linux-1.6.0/Makefile	2004-06-22 12:15:25.000000000 +0400
+++ pptp-client/Makefile	2005-01-16 13:07:08.242660080 +0300
@@ -11,12 +11,12 @@
 MANDIR=$(DESTDIR)/usr/share/man/man8
 PPPDIR=$(DESTDIR)/etc/ppp
 
-CC	= gcc
+#CC	= gcc
 RM	= rm -f
-OPTIMIZE= -O0
-DEBUG	= -g
+OPTIMIZE= -O2
+#DEBUG	= -g
 INCLUDE =
-CFLAGS  = -Wall $(OPTIMIZE) $(DEBUG) $(INCLUDE)
+CFLAGS  = -Wall $(OPTIMIZE) $(DEBUG) $(INCLUDE) $(EXTRACFLAGS)
 LIBS	= -lutil
 LDFLAGS	=
 
@@ -43,11 +43,8 @@
 vector_test: vector_test.o vector.o
 	$(CC) -o vector_test vector_test.o vector.o
 
-clean:
-	$(RM) *.o config.h
-
-clobber: clean
-	$(RM) $(PPTP_BIN) vector_test
+clobber clean:
+	$(RM) *.o config.h $(PPTP_BIN) vector_test
 
 distclean: clobber
 
--- pptp-linux-1.5.0/pptp.c	2005-03-14 22:35:07.330879208 +0300
+++ pptp-client/pptp.c	2005-03-14 22:36:02.382510088 +0300
@@ -54,7 +54,7 @@
 #endif
 
 int syncppp = 0;
-int log_level = 1;
+int log_level = 0;
 int disable_buffer = 0;
 
 struct in_addr get_ip_address(char *name);
--- pptp-1.6.0/pptp_ctrl.c	2005-02-18 04:42:45.000000000 +0300
+++ pptp-client/pptp_ctrl.c	2007-12-09 17:16:58.000000000 +0300
@@ -44,6 +44,7 @@
  */
 
 /* Globals */
+extern int syncppp;
 
 /* control the number of times echo packets will be logged */
 static int nlogecho = 10;
@@ -944,7 +945,7 @@
             log("  send_accm is %08lX, recv_accm is %08lX",
                     (unsigned long) ntoh32(packet->send_accm),
                     (unsigned long) ntoh32(packet->recv_accm));
-            if (!(ntoh32(packet->send_accm) == 0 &&
+            if (syncppp && !(ntoh32(packet->send_accm) == 0 &&
                     ntoh32(packet->recv_accm) == 0))
                 warn("Non-zero Async Control Character Maps are not supported!");
             break;
--- pptp-1.6.0/util.c	2005-02-18 04:42:45.000000000 +0300
+++ pptp-client/util.c	2007-12-09 17:19:09.000000000 +0300
@@ -26,8 +26,7 @@
 char buf[256], string[256];				\
 va_start(ap, format);					\
 vsnprintf(buf, sizeof(buf), format, ap);		\
-snprintf(string, sizeof(string), "%s %s[%s:%s:%d]: %s",	\
-	 log_string, label, func, file, line, buf);	\
+snprintf(string, sizeof(string), "%s",	buf);		\
 va_end(ap)
 
 /*** open log *****************************************************************/
@@ -44,8 +43,10 @@
 /*** print a message to syslog ************************************************/
 void _log(const char *func, const char *file, int line, const char *format, ...)
 {
-    MAKE_STRING("log");
-    syslog(LOG_NOTICE, "%s", string);
+    if (log_level > 0) {
+        MAKE_STRING("log");
+        syslog(LOG_NOTICE, "%s", string);
+    }
 }
 
 /*** print a warning to syslog ************************************************/
