From: Patrick McHardy <kaber@trash.net>
Date: Wed, 26 Mar 2008 03:17:36 +0000 (-0700)
Subject: [NETFILTER]: nf_conntrack_sip: use strlen/strcmp
X-Git-Tag: v2.6.26-rc1~1138^2~337
X-Git-Url: http://git.kernel.org/?p=linux%2Fkernel%2Fgit%2Fstable%2Flinux-2.6.31.y.git;a=commitdiff_plain;h=779382eb324ad0c39f8c4d10a47a813b490ab82c

[NETFILTER]: nf_conntrack_sip: use strlen/strcmp

Replace sizeof/memcmp by strlen/strcmp. Use case-insensitive comparison
for SIP methods and the SIP/2.0 string, as specified in RFC 3261.

Signed-off-by: Patrick McHardy <kaber@trash.net>
Signed-off-by: David S. Miller <davem@davemloft.net>
---

diff --git a/net/ipv4/netfilter/ip_nat_sip.c b/net/ipv4/netfilter/ip_nat_sip.c
--- a/net/ipv4/netfilter/ip_nat_sip.c
+++ b/net/ipv4/netfilter/ip_nat_sip.c
@@ -120,12 +120,12 @@ static int map_sip_addr(struct sk_buff *
 	 */
 	if ((matchlen == map->addr[dir].srciplen ||
 	     matchlen == map->addr[dir].srclen) &&
-	    memcmp(*dptr + matchoff, map->addr[dir].src, matchlen) == 0) {
+	    strncmp(*dptr + matchoff, map->addr[dir].src, matchlen) == 0) {
 		addr    = map->addr[!dir].dst;
 		addrlen = map->addr[!dir].dstlen;
 	} else if ((matchlen == map->addr[dir].dstiplen ||
 		    matchlen == map->addr[dir].dstlen) &&
-		   memcmp(*dptr + matchoff, map->addr[dir].dst, matchlen) == 0) {
+		   strncmp(*dptr + matchoff, map->addr[dir].src, matchlen) == 0) {
 		addr    = map->addr[!dir].src;
 		addrlen = map->addr[!dir].srclen;
 	} else
@@ -253,7 +253,7 @@ static unsigned int ip_nat_sip_help(stru
 	/* dataoff = ip_hdrlen(*pskb) + sizeof(struct udphdr); */
 	dataoff = iph->ihl*4  + sizeof(struct udphdr);
 	datalen = (*pskb)->len - dataoff;
-	if (datalen < sizeof("SIP/2.0") - 1)  {
+	if (datalen < strlen("SIP/2.0"))  {
 #ifdef DEBUG
 		printk("%s:%d:Accept packet, but not handled.\n", __FILE__, __LINE__);
 #endif
@@ -266,14 +266,14 @@ static unsigned int ip_nat_sip_help(stru
 	dptr = (char *)udph + sizeof(struct udphdr);
 	
 	/* Basic rules: requests and responses. */
-	if (strncmp(dptr, "SIP/2.0", sizeof("SIP/2.0") - 1) != 0) {
+	if (strnicmp(dptr, "SIP/2.0", strlen("SIP/2.0")) != 0) {
 		/* 10.2: Constructing the REGISTER Request:
 		 *
 		 * The "userinfo" and "@" components of the SIP URI MUST NOT
 		 * be present.
 		 */
-		if (datalen >= sizeof("REGISTER") - 1 &&
-		    strncmp(dptr, "REGISTER", sizeof("REGISTER") - 1) == 0)
+		if (datalen >= strlen("REGISTER") &&
+		    strnicmp(dptr, "REGISTER", strlen("REGISTER")) == 0)
 			pos = POS_REG_REQ_URI;
 		else
 			pos = POS_REQ_URI;
@@ -300,11 +300,11 @@ static unsigned int ip_nat_sip_help(stru
 
 	
         /* RTP info only in some SDP pkts */
-	       if ( !exp || (memcmp(dptr, "INVITE", sizeof("INVITE") - 1) != 0 &&
-		    memcmp(dptr, "UPDATE", sizeof("UPDATE") - 1) != 0 &&
-		    memcmp(dptr, "SIP/2.0 180", sizeof("SIP/2.0 180") - 1) != 0 &&
-		    memcmp(dptr, "SIP/2.0 183", sizeof("SIP/2.0 183") - 1) != 0 &&
-		    memcmp(dptr, "SIP/2.0 200", sizeof("SIP/2.0 200") - 1) != 0)) {
+	       if ( !exp || (strnicmp(dptr, "INVITE", strlen("INVITE")) != 0 &&
+		    strnicmp(dptr, "UPDATE", strlen("UPDATE")) != 0 &&
+		    strnicmp(dptr, "SIP/2.0 180", strlen("SIP/2.0 180")) != 0 &&
+		    strnicmp(dptr, "SIP/2.0 183", strlen("SIP/2.0 183")) != 0 &&
+		    strnicmp(dptr, "SIP/2.0 200", strlen("SIP/2.0 200")) != 0)) {
 
 		#ifdef DEBUG
 		printk("%s:%d:Cannot find RTP info or exp null\n", __FILE__, __LINE__);
diff --git a/net/ipv4/netfilter/ip_conntrack_sip.c b/net/ipv4/netfilter/ip_conntrack_sip.c
--- a/net/ipv4/netfilter/ip_conntrack_sip.c
+++ b/net/ipv4/netfilter/ip_conntrack_sip.c
@@ -547,7 +547,7 @@ static int sip_help(const struct iphdr *
 	/* datalen = (*pskb)->len - dataoff; */
 	datalen = len - dataoff;
 
-	if (datalen < sizeof("SIP/2.0 200") - 1) {
+	if (datalen < strlen("SIP/2.0 200")) {
 	#ifdef DEBUG
 		printk("%s:%d:not enough data\n", __FILE__, __LINE__);
 	#endif
@@ -555,11 +555,11 @@ static int sip_help(const struct iphdr *
 	}
 
 	/* RTP info only in some SDP pkts */
-	if (memcmp(dptr, "INVITE", sizeof("INVITE") - 1) != 0 &&
-	    memcmp(dptr, "UPDATE", sizeof("UPDATE") - 1) != 0 &&
-	    memcmp(dptr, "SIP/2.0 180", sizeof("SIP/2.0 180") - 1) != 0 &&
-	    memcmp(dptr, "SIP/2.0 183", sizeof("SIP/2.0 183") - 1) != 0 &&
-	    memcmp(dptr, "SIP/2.0 200", sizeof("SIP/2.0 200") - 1) != 0) {
+	if (strnicmp(dptr, "INVITE", strlen("INVITE")) != 0 &&
+	    strnicmp(dptr, "UPDATE", strlen("UPDATE")) != 0 &&
+	    strnicmp(dptr, "SIP/2.0 180", strlen("SIP/2.0 180")) != 0 &&
+	    strnicmp(dptr, "SIP/2.0 183", strlen("SIP/2.0 183")) != 0 &&
+	    strnicmp(dptr, "SIP/2.0 200", strlen("SIP/2.0 200")) != 0) {
 
 #ifdef DEBUG
 		printk("%s:%d:Cannot find RTP info\n", __FILE__, __LINE__);
