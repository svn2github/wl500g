--- linux-2.4.36.1/drivers/usb/hid.h	2008-02-16 15:56:03.000000000 +0300
+++ linux/drivers/usb/hid.h	2008-02-21 12:30:42.000000000 +0300
@@ -343,6 +343,8 @@
 
 	int open;							/* is the device open by anyone? */
 	char name[128];							/* Device name */
+
+	wait_queue_head_t wait;						/* For sleeping */
 };
 
 #define HID_GLOBAL_STACK_SIZE 4
@@ -400,5 +402,6 @@
 int hid_find_field(struct hid_device *, unsigned int, unsigned int, struct hid_field **);
 int hid_set_field(struct hid_field *, unsigned, __s32);
 void hid_write_report(struct hid_device *, struct hid_report *);
+int usbhid_wait_io(struct hid_device *hid);
 void hid_read_report(struct hid_device *, struct hid_report *);
 void hid_init_reports(struct hid_device *hid);
--- linux-2.4.36.1/drivers/usb/hid-core.c	2008-02-16 15:56:03.000000000 +0300
+++ linux/drivers/usb/hid-core.c	2008-02-21 19:44:53.000000000 +0300
@@ -1076,12 +1076,14 @@
 	if (hid->outhead != hid->outtail) {
 		if (hid_submit_out(hid)) {
 			clear_bit(HID_OUT_RUNNING, &hid->iofl);
+			wake_up(&hid->wait);
 		}
 		spin_unlock_irqrestore(&hid->outlock, flags);
 		return;
 	}
 
 	clear_bit(HID_OUT_RUNNING, &hid->iofl);
+	wake_up(&hid->wait);
 	spin_unlock_irqrestore(&hid->outlock, flags);
 }
 
@@ -1114,6 +1116,30 @@
 	spin_unlock_irqrestore(&hid->outlock, flags);
 }
 
+int usbhid_wait_io(struct hid_device *hid)
+{
+	DECLARE_WAITQUEUE(wait, current);
+	long timeout = 10 * HZ;
+	
+	add_wait_queue(&hid->wait, &wait);
+
+	while (test_bit(HID_OUT_RUNNING, &hid->iofl) && timeout)
+	{
+		set_current_state(TASK_UNINTERRUPTIBLE);
+		timeout = schedule_timeout (timeout);
+	}
+
+        remove_wait_queue(&hid->wait, &wait);
+        
+	if (!timeout)
+	{
+		dbg("timeout waiting for ctrl or out queue to clear\n");
+		return -1;
+	}
+
+	return 0;
+}
+
 int hid_open(struct hid_device *hid)
 {
 	if (hid->open++)
@@ -1354,6 +1380,8 @@
 		return NULL;
 	}
 
+	init_waitqueue_head(&hid->wait);
+
 	spin_lock_init(&hid->outlock);
 
 	hid->version = hdesc->bcdHID;
--- linux-2.4.36.1/drivers/usb/hiddev.c	2008-02-16 15:56:03.000000000 +0300
+++ linux/drivers/usb/hiddev.c	2008-02-21 19:44:14.000000000 +0300
@@ -499,6 +499,7 @@
 			return -EINVAL;
 
 		hid_read_report(hid, report);
+		usbhid_wait_io(hid);
 
 		return 0;
 
@@ -513,6 +514,7 @@
 			return -EINVAL;
 
 		hid_write_report(hid, report);
+		usbhid_wait_io(hid);
 
 		return 0;
 
@@ -620,9 +622,8 @@
 				return -EINVAL;
 
 			if (cmd == HIDIOCGUSAGES || cmd == HIDIOCSUSAGES) {
-				if (uref_multi.num_values >= HID_MAX_USAGES || 
-				    uref->usage_index >= field->maxusage || 
-				   (uref->usage_index + uref_multi.num_values) >= field->maxusage)
+				if (uref_multi.num_values > HID_MAX_USAGES || 
+				   (uref->usage_index + uref_multi.num_values) > field->maxusage)
 					return -EINVAL;
 			}
 		}
