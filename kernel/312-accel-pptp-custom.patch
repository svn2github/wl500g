diff -BurpN linux.orig/drivers/net/pptp.c linux/drivers/net/pptp.c
--- linux.orig/drivers/net/pptp.c	2010-08-21 14:22:39.000000000 +0000
+++ linux/drivers/net/pptp.c	2010-08-21 14:50:01.000000000 +0000
@@ -14,6 +14,7 @@
 #include <linux/module.h>
 #include <linux/kernel.h>
 #include <linux/slab.h>
+#include <linux/vmalloc.h>
 #include <linux/errno.h>
 #include <linux/netdevice.h>
 #include <linux/net.h>
@@ -21,7 +22,7 @@
 #include <linux/init.h>
 #include <linux/ppp_channel.h>
 #include <linux/ppp_defs.h>
-#include "if_pppox.h"
+#include <linux/if_pppox.h>
 #include <linux/if_ppp.h>
 #include <linux/notifier.h>
 #include <linux/file.h>
@@ -43,11 +44,11 @@
 
 #include <asm/uaccess.h>
 
-#define DEBUG
-//#define CONFIG_GRE
+//#define DEBUG
+//#define CONFIG_NET_IPGRE_DEMUX
 
-#if defined(CONFIG_GRE) || defined(CONFIG_GRE_MODULE)
-#include "gre.h"
+#if defined(CONFIG_NET_IPGRE_DEMUX) || defined(CONFIG_NET_IPGRE_DEMUX_MODULE)
+#include <net/gre.h>
 #endif
 
 #define PPTP_DRIVER_VERSION "0.8.5-rc1"
@@ -93,6 +94,7 @@ static inline void nf_reset(struct sk_bu
 #define __user
 #endif
 
+#if 0 // already defined for mips32
 /**
  * __ffs - find first bit in word.
  * @word: The word to search
@@ -173,6 +175,7 @@ found_middle:
 	return result + __ffs(tmp);
 }
 #endif
+#endif
 
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,0)
 static rwlock_t chan_lock=RW_LOCK_UNLOCKED;
@@ -270,7 +273,7 @@ static int lookup_chan_dst(u16 call_id, 
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2,6,0)
 	rcu_read_lock();
 #else
-	down(&chan_lock);
+	read_lock(&chan_lock);
 #endif
 	for(i = find_next_bit(callid_bitmap,MAX_CALLID,1); i < MAX_CALLID; 
 	                i = find_next_bit(callid_bitmap, MAX_CALLID, i + 1)){
@@ -281,7 +284,7 @@ static int lookup_chan_dst(u16 call_id, 
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2,6,0)
 	rcu_read_unlock();
 #else
-	up(&chan_lock);
+	read_unlock(&chan_lock);
 #endif
 	
 	return i<MAX_CALLID;
@@ -1118,7 +1121,7 @@ static struct pppox_proto pppox_pptp_pro
 #endif
 };
 
-#if defined(CONFIG_GRE) || defined(CONFIG_GRE_MODULE)
+#if defined(CONFIG_NET_IPGRE_DEMUX) || defined(CONFIG_NET_IPGRE_DEMUX_MODULE)
 static struct gre_protocol gre_pptp_protocol = {
 	.handler	= pptp_rcv,
 };
@@ -1139,14 +1142,22 @@ static int __init pptp_init_module(void)
 	int err=0;
 	printk(KERN_INFO "PPTP driver version " PPTP_DRIVER_VERSION "\n");
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,0)
+	callid_sock = __vmalloc((MAX_CALLID + 1) * sizeof(void *),
+	                        GFP_KERNEL, PAGE_KERNEL);
+#else
 	callid_sock = __vmalloc((MAX_CALLID + 1) * sizeof(void *),
 	                        GFP_KERNEL | __GFP_ZERO, PAGE_KERNEL);
+#endif
 	if (!callid_sock) {
 		printk(KERN_ERR "PPTP: cann't allocate memory\n");
 		return -ENOMEM;
 	}
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,0)
+	memset(callid_sock, 0, (MAX_CALLID + 1) * sizeof(void *));
+#endif
 
-#if defined(CONFIG_GRE) || defined(CONFIG_GRE_MODULE)
+#if defined(CONFIG_NET_IPGRE_DEMUX) || defined(CONFIG_NET_IPGRE_DEMUX_MODULE)
 	if (gre_add_protocol(&gre_pptp_protocol, GREPROTO_PPTP) < 0) {
 		printk(KERN_INFO "PPTP: can't add protocol\n");
 		goto out_free_mem;
@@ -1184,7 +1195,7 @@ out_unregister_sk_proto:
 out_inet_del_protocol:
 #endif
 
-#if defined(CONFIG_GRE) || defined(CONFIG_GRE_MODULE)
+#if defined(CONFIG_NET_IPGRE_DEMUX) || defined(CONFIG_NET_IPGRE_DEMUX_MODULE)
 	gre_del_protocol(&gre_pptp_protocol, GREPROTO_PPTP);
 #elif LINUX_VERSION_CODE < KERNEL_VERSION(2,6,0)
 	inet_del_protocol(&net_pptp_protocol);
@@ -1200,7 +1211,7 @@ out_free_mem:
 static void __exit pptp_exit_module(void)
 {
 	unregister_pppox_proto(PX_PROTO_PPTP);
-#if defined(CONFIG_GRE) || defined(CONFIG_GRE_MODULE)
+#if defined(CONFIG_NET_IPGRE_DEMUX) || defined(CONFIG_NET_IPGRE_DEMUX_MODULE)
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2,6,0)
 	proto_unregister(&pptp_sk_proto);
 #endif
diff -BurpN linux.orig/net/ipv4/gre.c linux/net/ipv4/gre.c
--- linux.orig/net/ipv4/gre.c	2010-08-21 14:27:23.000000000 +0000
+++ linux/net/ipv4/gre.c	2010-08-21 14:52:12.000000000 +0000
@@ -8,7 +8,7 @@
 #include <linux/spinlock.h>
 #include <net/protocol.h>
 
-#include "gre.h"
+#include <net/gre.h>
 
 struct gre_protocol *gre_proto[GREPROTO_MAX] ____cacheline_aligned_in_smp;
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,0)
@@ -181,7 +181,7 @@ static struct net_protocol net_gre_proto
 	.handler	= gre_rcv,
 	.err_handler	= gre_err,
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2,6,24)
-	.netns_ok=1,
+	.netns_ok	= 1,
 #endif
 };
 #endif
@@ -188,7 +188,7 @@ static struct net_protocol net_gre_proto
 
 static int __init gre_init(void)
 {
-	printk(KERN_INFO "GRE over IPv4 demultiplexor driver");
+	printk(KERN_INFO "GRE over IPv4 demultiplexor driver\n");
 
