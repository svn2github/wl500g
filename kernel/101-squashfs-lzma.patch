This patch adds LZMA support to the squashfs code, you should also
change mksquashfs appropriately.

Oleg I. Vdovikin <oleg@cs.msu.su>

--- linuz/fs/squashfs/inode.c	2004-12-15 22:56:47.000000000 +0300
+++ linux/fs/squashfs/inode.c	2005-01-20 20:27:27.490010968 +0300
@@ -3,6 +3,9 @@
  *
  * Copyright (c) 2002, 2003, 2004 Phillip Lougher <plougher@users.sourceforge.net>
  *
+ * LZMA decompressor support added by Oleg I. Vdovikin
+ * Copyright (c) 2005 Oleg I.Vdovikin <oleg@cs.msu.su>
+ *
  * This program is free software; you can redistribute it and/or
  * modify it under the terms of the GNU General Public License
  * as published by the Free Software Foundation; either version 2,
@@ -21,6 +24,8 @@
  * inode.c
  */
 
+#define SQUASHFS_LZMA
+
 #include <linux/types.h>
 #include <linux/squashfs_fs.h>
 #include <linux/module.h>
@@ -39,6 +46,20 @@
 
 #include "squashfs.h"
 
+#ifdef SQUASHFS_LZMA
+#define _7ZIP_BYTE_DEFINED
+#include "LzmaDecode.h"
+
+/* default LZMA settings, should be in sync with mksquashfs */
+#define LZMA_LC 3
+#define LZMA_LP 0
+#define LZMA_PB 2
+
+#define LZMA_WORKSPACE_SIZE ((LZMA_BASE_SIZE + \
+	(LZMA_LIT_SIZE << (LZMA_LC + LZMA_LP))) * sizeof(CProb))
+
+#endif
+
 static struct super_block *squashfs_read_super(struct super_block *, void *, int);
 static void squashfs_put_super(struct super_block *);
 static int squashfs_statfs(struct super_block *, struct statfs *);
@@ -232,6 +256,18 @@ unsigned int squashfs_read_data(
 	if(compressed) {
 		int zlib_err;
 
+#ifdef SQUASHFS_LZMA
+		CLzmaDecoderState vs;
+		vs.Properties.lc = LZMA_LC; vs.Properties.lp = LZMA_LP; vs.Properties.pb = LZMA_PB;
+		vs.Probs = (CProb *)stream.workspace;
+		if ((zlib_err = LzmaDecode(&vs, 
+			c_buffer, c_byte, &avail_bytes, 
+			buffer, msblk->read_size, &bytes)) != LZMA_RESULT_OK)
+		{
+			ERROR("lzma returned unexpected result 0x%x\n", zlib_err);
+			bytes = 0;
+		}
+#else
 		stream.next_in = c_buffer;
 		stream.avail_in = c_byte;
 		stream.next_out = buffer;
@@ -243,7 +276,7 @@ unsigned int squashfs_read_data(
 			bytes = 0;
 		} else
 			bytes = stream.total_out;
-		
+#endif
 		up(&msblk->read_data_mutex);
 	}
 
@@ -1981,7 +2004,12 @@ int __init init_squashfs_fs(void)
 	printk(KERN_INFO "squashfs: version 3.0 (2006/03/15) "
 		"Phillip Lougher\n");
 
+#ifdef SQUASHFS_LZMA
+	if (!(stream.workspace = vmalloc(LZMA_WORKSPACE_SIZE))) {
+		ERROR("Failed to allocate LZMA workspace\n");
+#else
 	if (!(stream.workspace = vmalloc(zlib_inflate_workspacesize()))) {
 		ERROR("Failed to allocate zlib workspace\n");
+#endif
 		return -ENOMEM;
 	}
--- linuz/fs/squashfs/Makefile	2004-12-15 22:56:47.000000000 +0300
+++ linux/fs/squashfs/Makefile	2009-10-05 20:26:23.000000000 +0400
@@ -4,9 +4,13 @@
 
 O_TARGET := squashfs.o
 
-obj-y  := inode.o
+obj-y  := inode.o LzmaDecode.o
 obj-$(CONFIG_SQUASHFS_2_0_COMPATIBILITY) += squashfs2_0.o
 
 obj-m := $(O_TARGET)
 
+LZMADIR = $(SRCBASE)/lzma/C/Compress/Lzma
+EXTRA_CFLAGS += -I$(LZMADIR)
+vpath %.c $(LZMADIR)
+
 include $(TOPDIR)/Rules.make
