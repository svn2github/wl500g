diff -BurpN linux-2.4.37.9.orig/include/linux/ipv6.h linux-2.4.37.9/include/linux/ipv6.h
--- linux-2.4.37.9.orig/include/linux/ipv6.h	2010-03-04 15:45:52.000000000 +0000
+++ linux-2.4.37.9/include/linux/ipv6.h	2010-03-12 17:20:44.000000000 +0000
@@ -114,6 +114,7 @@ struct ipv6_devconf {
 	__s32		rtr_solicits;
 	__s32		rtr_solicit_interval;
 	__s32		rtr_solicit_delay;
+	__s32		disable_ipv6;
 #ifdef CONFIG_IPV6_PRIVACY
 	__s32		use_tempaddr;
 	__s32		temp_valid_lft;
@@ -136,6 +137,7 @@ enum {
 	DEVCONF_RTR_SOLICITS,
 	DEVCONF_RTR_SOLICIT_INTERVAL,
 	DEVCONF_RTR_SOLICIT_DELAY,
+	DEVCONF_DISABLE_IPV6,
 #ifdef CONFIG_IPV6_PRIVACY
 	DEVCONF_USE_TEMPADDR,
 	DEVCONF_TEMP_VALID_LFT,
diff -BurpN linux-2.4.37.9.orig/include/linux/sysctl.h linux-2.4.37.9/include/linux/sysctl.h
--- linux-2.4.37.9.orig/include/linux/sysctl.h	2010-02-01 21:04:46.000000000 +0000
+++ linux-2.4.37.9/include/linux/sysctl.h	2010-03-12 18:47:02.000000000 +0000
@@ -432,7 +432,8 @@ enum {
 	NET_IPV6_DAD_TRANSMITS=7,
 	NET_IPV6_RTR_SOLICITS=8,
 	NET_IPV6_RTR_SOLICIT_INTERVAL=9,
-	NET_IPV6_RTR_SOLICIT_DELAY=10
+	NET_IPV6_RTR_SOLICIT_DELAY=10,
+	NET_IPV6_DISABLE=11
 };
 
 /* /proc/sys/net/ipv6/icmp */
diff -BurpN linux-2.4.37.9.orig/net/ipv6/addrconf.c linux-2.4.37.9/net/ipv6/addrconf.c
--- linux-2.4.37.9.orig/net/ipv6/addrconf.c	2010-02-01 21:04:46.000000000 +0000
+++ linux-2.4.37.9/net/ipv6/addrconf.c	2010-03-12 18:01:43.000000000 +0000
@@ -125,6 +125,7 @@ struct ipv6_devconf ipv6_devconf =
 	MAX_RTR_SOLICITATIONS,		/* router solicits	*/
 	RTR_SOLICITATION_INTERVAL,	/* rtr solicit interval	*/
 	MAX_RTR_SOLICITATION_DELAY,	/* rtr solicit delay	*/
+	0,				/* disable ipv6		*/
 };
 
 static struct ipv6_devconf ipv6_devconf_dflt =
@@ -139,6 +140,7 @@ static struct ipv6_devconf ipv6_devconf_
 	MAX_RTR_SOLICITATIONS,		/* router solicits	*/
 	RTR_SOLICITATION_INTERVAL,	/* rtr solicit interval	*/
 	MAX_RTR_SOLICITATION_DELAY,	/* rtr solicit delay	*/
+	0,				/* disable ipv6		*/
 };
 
 /* IPv6 Wildcard Address and Loopback Address defined by RFC2553 */
@@ -482,6 +484,13 @@ ipv6_add_addr(struct inet6_dev *idev, co
 		return ERR_PTR(-ENODEV);	/*XXX*/
 	}
 
+	if (idev->cnf.disable_ipv6) {
+		read_unlock(&addrconf_lock);
+		spin_unlock_bh(&lock);
+		kfree(ifa);
+		return ERR_PTR(-EACCES);
+	}
+
 	inet6_ifa_count++;
 	ifa->idev = idev;
 	in6_dev_hold(idev);
@@ -1995,6 +2004,7 @@ static void inline ipv6_store_devconf(st
 	array[DEVCONF_RTR_SOLICITS] = cnf->rtr_solicits;
 	array[DEVCONF_RTR_SOLICIT_INTERVAL] = cnf->rtr_solicit_interval;
 	array[DEVCONF_RTR_SOLICIT_DELAY] = cnf->rtr_solicit_delay;
+	array[DEVCONF_DISABLE_IPV6] = cnf->disable_ipv6;
 #ifdef CONFIG_IPV6_PRIVACY
 	array[DEVCONF_USE_TEMPADDR] = cnf->use_tempaddr;
 	array[DEVCONF_TEMP_VALID_LFT] = cnf->temp_valid_lft;
@@ -2155,10 +2165,71 @@ int addrconf_sysctl_forward(ctl_table *c
         return ret;
 }
 
+static void dev_disable_change(struct inet6_dev *idev)
+{
+	if (!idev || !idev->dev)
+		return;
+
+	if (idev->cnf.disable_ipv6)
+		addrconf_notify(NULL, NETDEV_DOWN, idev->dev);
+	else
+		addrconf_notify(NULL, NETDEV_UP, idev->dev);
+}
+
+static void addrconf_disable_change(struct inet6_dev *idev)
+{
+	struct net_device *dev;
+
+	if (idev) {
+		dev_disable_change(idev);
+		return;
+	}
+
+	read_lock(&dev_base_lock);
+	for (dev=dev_base; dev; dev=dev->next) {
+		read_lock(&addrconf_lock);
+		idev = __in6_dev_get(dev);
+		if (idev) {
+			idev->cnf.disable_ipv6 = ipv6_devconf.disable_ipv6;
+			dev_disable_change(idev);
+		}
+		read_unlock(&addrconf_lock);
+	}
+	read_unlock(&dev_base_lock);
+}
+
+static
+int addrconf_sysctl_disable(ctl_table *ctl, int write, struct file * filp,
+			   void *buffer, size_t *lenp)
+{
+	int *valp = ctl->data;
+	int val = *valp;
+	int ret;
+
+	ret = proc_dointvec(ctl, write, filp, buffer, lenp);
+
+	if (write && *valp != val && valp != &ipv6_devconf_dflt.disable_ipv6) {
+		struct inet6_dev *idev = NULL;
+
+		if (valp != &ipv6_devconf.disable_ipv6) {
+			idev = (struct inet6_dev *)ctl->extra1;
+			if (idev == NULL)
+				return ret;
+		} else
+			ipv6_devconf_dflt.disable_ipv6 = ipv6_devconf.disable_ipv6;
+
+		rtnl_lock();
+		addrconf_disable_change(idev);
+		rtnl_unlock();
+	}
+
+        return ret;
+}
+
 static struct addrconf_sysctl_table
 {
 	struct ctl_table_header *sysctl_header;
-	ctl_table addrconf_vars[11];
+	ctl_table addrconf_vars[12];
 	ctl_table addrconf_dev[2];
 	ctl_table addrconf_conf_dir[2];
 	ctl_table addrconf_proto_dir[2];
@@ -2205,6 +2276,10 @@ static struct addrconf_sysctl_table
          &ipv6_devconf.rtr_solicit_delay, sizeof(int), 0644, NULL,
          &proc_dointvec_jiffies},
 
+	{NET_IPV6_DISABLE, "disable_ipv6",
+         &ipv6_devconf.disable_ipv6, sizeof(int), 0644, NULL,
+         &addrconf_sysctl_disable},
+
 	{0}},
 
 	{{NET_PROTO_CONF_ALL, "all", NULL, 0, 0555, addrconf_sysctl.addrconf_vars},{0}},
diff -BurpN linux-2.4.37.9.orig/net/ipv6/ip6_input.c linux-2.4.37.9/net/ipv6/ip6_input.c
--- linux-2.4.37.9.orig/net/ipv6/ip6_input.c	2010-02-01 21:04:46.000000000 +0000
+++ linux-2.4.37.9/net/ipv6/ip6_input.c	2010-03-12 17:53:28.000000000 +0000
@@ -54,10 +54,15 @@ int ipv6_rcv(struct sk_buff *skb, struct
 {
 	struct ipv6hdr *hdr;
 	u32 		pkt_len;
+	struct inet6_dev *idev;
 
 	if (skb->pkt_type == PACKET_OTHERHOST)
 		goto drop;
 
+	idev = __in6_dev_get(skb->dev);
+	if (!idev || idev->cnf.disable_ipv6)
+		goto drop;
+
 	IP6_INC_STATS_BH(Ip6InReceives);
 
 	if ((skb = skb_share_check(skb, GFP_ATOMIC)) == NULL)
diff -BurpN linux-2.4.37.9.orig/net/ipv6/ip6_output.c linux-2.4.37.9/net/ipv6/ip6_output.c
--- linux-2.4.37.9.orig/net/ipv6/ip6_output.c	2010-02-01 21:04:46.000000000 +0000
+++ linux-2.4.37.9/net/ipv6/ip6_output.c	2010-03-12 17:56:53.000000000 +0000
@@ -103,6 +103,12 @@ int ip6_output(struct sk_buff *skb)
 {
 	struct dst_entry *dst = skb->dst;
 	struct net_device *dev = dst->dev;
+	struct inet6_dev *idev = __in6_dev_get(dev);
+
+	if (!idev || idev->cnf.disable_ipv6) {
+		kfree_skb(skb);
+		return 0;
+	}
 
 	skb->protocol = htons(ETH_P_IPV6);
 	skb->dev = dev;
