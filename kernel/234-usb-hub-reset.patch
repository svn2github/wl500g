Backport of 2.6.12 PATCH USB: relax usbcore reset timings

David Brownell [Wed, 31 Aug 2005 17:41:44 +0000 (10:41 -0700)]
This patch relaxes reset timings.  There are some reports that it
helps make enumeration work better on some high speed devices.

Signed-off-by: David Brownell <dbrownell@users.sourceforge.net>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

 Also backported in DD-WRT at revision 11016 by eko
  Fixes "USB device not accepting new address=2 (error=-71)" problem.
 
--- linux-2.4.37.orig/drivers/usb/hub.c	2009-01-22 10:26:03.000000000 +0300
+++ linux/drivers/usb/hub.c	2009-03-04 14:40:19.000000000 +0300
@@ -142,14 +142,15 @@
 static void usb_hub_power_on(struct usb_hub *hub)
 {
 	int i;
+	unsigned pgood_delay = hub->descriptor->bPwrOn2PwrGood * 2;
 
 	/* Enable power to the ports */
 	dbg("enabling power on all ports");
 	for (i = 0; i < hub->descriptor->bNbrPorts; i++)
 		usb_set_port_feature(hub->dev, i + 1, USB_PORT_FEAT_POWER);
 
-	/* Wait for power to be enabled */
-	wait_ms(hub->descriptor->bPwrOn2PwrGood * 2);
+	/* Wait at least 100 msec for power to become stable */
+	wait_ms(max(pgood_delay, (unsigned) 100));
 }
 
 static int usb_hub_configure(struct usb_hub *hub, struct usb_endpoint_descriptor *endpoint)
@@ -615,6 +616,10 @@ static int usb_hub_port_reset(struct usb
 
 		/* return on disconnect or reset */
 		status = usb_hub_port_wait_reset(hub, port, dev, delay);
+		if (status == 0) {
+			/* TRSTRCY = 10 ms; plus some extra */
+			wait_ms(10 + 40);
+		}
 		if (status != -1) {
 			usb_clear_port_feature(hub, port + 1, USB_PORT_FEAT_C_RESET);
 			return status;
