diff -BurpN linux-2.4.37.3/include/linux/if_pppox.h linux/include/linux/if_pppox.h
--- linux-2.4.37.3/include/linux/if_pppox.h	2009-07-26 00:00:00.000000000 +0000
+++ linux/include/linux/if_pppox.h	2009-07-26 09:39:11.000000000 +0000
@@ -44,18 +44,28 @@
  * PPPoE addressing definition 
  */ 
 typedef __u16 sid_t; 
+#if defined(CONFIG_PPPOE) || defined(CONFIG_PPPOE_MODULE)
 struct pppoe_addr{ 
        sid_t           sid;                    /* Session identifier */ 
        unsigned char   remote[ETH_ALEN];       /* Remote address */ 
        char            dev[IFNAMSIZ];          /* Local device to use */ 
 }; 
+#endif
+
+#if defined(CONFIG_PPTP) || defined(CONFIG_PPTP_MODULE)
+struct pptp_addr {
+       __u16		call_id;
+       struct in_addr 	sin_addr;
+};
+#endif
  
 /************************************************************************ 
  * Protocols supported by AF_PPPOX 
  */ 
 #define PX_PROTO_OE    0 /* Currently just PPPoE */
 #define PX_PROTO_OL2TP 1 /* Now L2TP also */
-#define PX_MAX_PROTO   2
+#define PX_PROTO_PPTP  2
+#define PX_MAX_PROTO   3
 
 /* The use of a union isn't viable because the size of this struct
  * must stay fixed over time -- applications use sizeof(struct
@@ -66,23 +76,31 @@ struct sockaddr_pppox {
        sa_family_t     sa_family;            /* address family, AF_PPPOX */
        unsigned int    sa_protocol;          /* protocol identifier */
        union{
-               struct pppoe_addr       pppoe;
+#if defined(CONFIG_PPPOE) || defined(CONFIG_PPPOE_MODULE)
+		struct pppoe_addr       pppoe;
+#endif
+#if defined(CONFIG_PPPOL2TP) || defined(CONFIG_PPPOL2TP_MODULE)
 		struct pppol2tp_addr    pppol2tp;
+#endif
+#if defined(CONFIG_PPTP) || defined(CONFIG_PPTP_MODULE)
+		struct pptp_addr	pptp;
+#endif
        }sa_addr;
 }__attribute__ ((packed)); /* deprecated */
 
-/* Must be binary-compatible with sockaddr_pppox for backwards compatabilty */
-struct sockaddr_pppoe {
-	sa_family_t     sa_family;	/* address family, AF_PPPOX */
-	unsigned int    sa_protocol;    /* protocol identifier */
-	struct pppoe_addr pppoe;
-}__attribute__ ((packed));
-
+#if defined(CONFIG_PPPOL2TP) || defined(CONFIG_PPPOL2TP_MODULE)
 struct sockaddr_pppol2tp {
 	sa_family_t     sa_family;      /* address family, AF_PPPOX */
 	unsigned int    sa_protocol;    /* protocol identifier */
 	struct pppol2tp_addr pppol2tp;
 }__attribute__ ((packed));
+#endif
+
+/* Socket options */
+#define PPTP_SO_TIMEOUT 1
+#define PPTP_SO_WINDOW  2
+#define PPTP_FLAG_PAUSE 0
+#define PPTP_FLAG_PROC  1
 
 /*********************************************************************
  *
@@ -90,9 +108,10 @@ struct sockaddr_pppol2tp {
  *
  ********************************************************************/
 
-#define PPPOEIOCSFWD	_IOW(0xB1 ,0, sizeof(struct sockaddr_pppox))
+#define PPPOEIOCSFWD	_IOW(0xB1 ,0, size_t)
 #define PPPOEIOCDFWD	_IO(0xB1 ,1)
-/*#define PPPOEIOCGFWD	_IOWR(0xB1,2, sizeof(struct sockaddr_pppox))*/
+#define PPPTPIOWFP      _IOWR(0xB1 ,2,size_t)
+/*#define PPPOEIOCGFWD	_IOWR(0xB1,2, size_t)*/
 
 /* Codes to identify message types */
 #define PADI_CODE	0x09
@@ -147,6 +166,8 @@ extern void unregister_pppox_proto(int p
 extern void pppox_unbind_sock(struct sock *sk);/* delete ppp-channel binding */
 extern int pppox_channel_ioctl(struct ppp_channel *pc, unsigned int cmd,
 			       unsigned long arg);
+extern int pppox_ioctl(struct socket *sock, unsigned int cmd,
+			       unsigned long arg);
 
 /* PPPoX socket states */
 enum {
diff -BurpN linux-2.4.37.3/include/net/sock.h linux/include/net/sock.h
--- linux-2.4.37.3/include/net/sock.h	2002-05-22 12:14:56.000000000 +0000
+++ linux/include/net/sock.h	2009-07-26 12:46:05.000000000 +0000
@@ -73,7 +73,9 @@
 #endif
 #endif
 
-#if defined(CONFIG_PPPOE) || defined(CONFIG_PPPOE_MODULE)
+#if defined(CONFIG_PPPOE) || defined(CONFIG_PPPOE_MODULE) \
+ || defined(CONFIG_PPPOL2TP) || defined(CONFIG_PPPOL2TP_MODULE) \
+ || defined(CONFIG_PPTP) || defined(CONFIG_PPTP_MODULE)
 #include <linux/if_pppox.h>
 #include <linux/ppp_channel.h>   /* struct ppp_channel */
 #endif
@@ -235,19 +237,57 @@ struct pppoe_opt
 	struct sockaddr_pppox	relay;	  /* what socket data will be
 					     relayed to (PPPoE relaying) */
 };
+#define pppoe_dev	proto.pppoe.dev
+#define pppoe_pa	proto.pppoe.pa
+#define pppoe_relay	proto.pppoe.relay
+#endif
 
+#if defined(CONFIG_PPTP) || defined(CONFIG_PPTP_MODULE)
+struct pptp_opt {
+	struct pptp_addr	src_addr;
+	struct pptp_addr	dst_addr;
+	__u32 ack_sent, ack_recv;
+	__u32 seq_sent, seq_recv;
+	__u32 first_seq;
+	int ppp_flags;
+};
+#endif
+#define PPTP_FLAG_PAUSE 0
+#define PPTP_FLAG_PROC 1
+ 
+#if defined(CONFIG_PPPOE) || defined(CONFIG_PPPOE_MODULE) \
+ || defined(CONFIG_PPPOL2TP) || defined(CONFIG_PPPOL2TP_MODULE) \
+ || defined(CONFIG_PPTP) || defined(CONFIG_PPTP_MODULE)
 struct pppox_opt
 {
 	struct ppp_channel	chan;
 	struct sock		*sk;
 	struct pppox_opt	*next;	  /* for hash table */
 	union {
+#if defined(CONFIG_PPPOE) || defined(CONFIG_PPPOE_MODULE)
 		struct pppoe_opt pppoe;
+#endif
+#if defined(CONFIG_PPTP) || defined(CONFIG_PPTP_MODULE) 
+		struct pptp_opt  pptp;
+#endif
 	} proto;
 };
-#define pppoe_dev	proto.pppoe.dev
-#define pppoe_pa	proto.pppoe.pa
-#define pppoe_relay	proto.pppoe.relay
+
+struct pppox_sock {
+	/* struct sock must be the first member of pppox_sock */
+	struct ppp_channel	chan;
+	struct sock		*sk;
+	struct pppox_sock	*next;	  /* for hash table */
+	union {
+#if defined(CONFIG_PPPOE) || defined(CONFIG_PPPOE_MODULE)
+		struct pppoe_opt pppoe;
+#endif
+#if defined(CONFIG_PPTP) || defined(CONFIG_PPTP_MODULE) 
+		struct pptp_opt  pptp;
+#endif
+	} proto;
+	unsigned short		num;
+};
 #endif
 
 /* This defines a selective acknowledgement block. */
@@ -720,7 +760,9 @@ struct sock {
 #if defined(CONFIG_ROSE) || defined(CONFIG_ROSE_MODULE)
 		rose_cb			*rose;
 #endif
-#if defined(CONFIG_PPPOE) || defined(CONFIG_PPPOE_MODULE)
+#if defined(CONFIG_PPPOE) || defined(CONFIG_PPPOE_MODULE) \
+ || defined(CONFIG_PPPOL2TP) || defined(CONFIG_PPPOL2TP_MODULE) \
+ || defined(CONFIG_PPTP) || defined(CONFIG_PPTP_MODULE)
 		struct pppox_opt	*pppox;
 #endif
 		struct netlink_opt	*af_netlink;
@@ -760,6 +802,20 @@ struct sock {
 	void                    (*destruct)(struct sock *sk);
 };
 
+#if defined(CONFIG_PPPOE) || defined(CONFIG_PPPOE_MODULE) \
+ || defined(CONFIG_PPPOL2TP) || defined(CONFIG_PPPOL2TP_MODULE) \
+ || defined(CONFIG_PPTP) || defined(CONFIG_PPTP_MODULE)
+static inline struct pppox_sock *pppox_sk(struct sock *sk)
+{
+	return (struct pppox_sock *)sk->protinfo.pppox;
+}
+
+static inline struct sock *sk_pppox(struct pppox_sock *po)
+{
+	return po->sk;
+}
+#endif
+
 /* The per-socket spinlock must be held here. */
 #define sk_add_backlog(__sk, __skb)			\
 do {	if((__sk)->backlog.tail == NULL) {		\
diff -BurpN linux-2.4.37.3/drivers/net/Config.in linux/drivers/net/Config.in
--- linux-2.4.37.3/drivers/net/Config.in	2009-07-26 00:00:00.000000000 +0000
+++ linux/drivers/net/Config.in	2009-07-26 12:35:28.000000000 +0000
@@ -347,6 +347,7 @@ if [ ! "$CONFIG_PPP" = "n" ]; then
    if [ "$CONFIG_EXPERIMENTAL" = "y" ]; then
       dep_tristate '  PPP over Ethernet (EXPERIMENTAL)' CONFIG_PPPOE $CONFIG_PPP
       dep_tristate '  PPP over L2TP (EXPERIMENTAL)' CONFIG_PPPOL2TP $CONFIG_PPP $CONFIG_PPPOE
+      dep_tristate '  PPP over IP (EXPERIMENTA)' CONFIG_PPTP $CONFIG_PPP $CONFIG_PPPOE
    fi
    if [ "$CONFIG_ATM" = "y" -o "$CONFIG_ATM" = "m" ]; then
       dep_tristate '  PPP over ATM (EXPERIMENTAL)' CONFIG_PPPOATM $CONFIG_PPP $CONFIG_ATM
diff -BurpN linux-2.4.37.3/drivers/net/Makefile linux/drivers/net/Makefile
--- linux-2.4.37.3/drivers/net/Makefile	2009-07-26 00:00:00.000000000 +0000
+++ linux/drivers/net/Makefile	2009-07-26 12:36:33.000000000 +0000
@@ -169,6 +169,7 @@ obj-$(CONFIG_PPP_BSDCOMP) += bsd_comp.o
 obj-$(CONFIG_PPP_MPPE_MPPC) += ppp_mppe_mppc.o
 obj-$(CONFIG_PPPOE) += pppox.o pppoe.o
 obj-$(CONFIG_PPPOL2TP) += pppox.o pppol2tp.o
+obj-$(CONFIG_PPTP) += pppox.o pptp.o
 
 obj-$(CONFIG_SLIP) += slip.o
 ifeq ($(CONFIG_SLIP_COMPRESSED),y)
diff -BurpN linux-2.4.37.3/drivers/net/pppox.c linux/drivers/net/pppox.c
--- linux-2.4.37.3/drivers/net/pppox.c	2009-07-26 00:00:00.000000000 +0000
+++ linux/drivers/net/pppox.c	2009-07-26 12:41:42.000000000 +0000
@@ -77,7 +77,7 @@ EXPORT_SYMBOL(register_pppox_proto);
 EXPORT_SYMBOL(unregister_pppox_proto);
 EXPORT_SYMBOL(pppox_unbind_sock);
 
-static int pppox_ioctl(struct socket* sock, unsigned int cmd,
+int pppox_ioctl(struct socket* sock, unsigned int cmd,
 		       unsigned long arg)
 {
 	struct sock *sk = sock->sk;
@@ -115,6 +115,7 @@ static int pppox_ioctl(struct socket* so
 	return err;
 }
 
+EXPORT_SYMBOL(pppox_ioctl);
 
 static int pppox_create(struct socket *sock, int protocol)
 {
