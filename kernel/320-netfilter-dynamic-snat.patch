diff -BurpN linux-2.4.37/net/ipv4/netfilter/ip_nat_rule.c linux/net/ipv4/netfilter/ip_nat_rule.c
--- linux-2.4.37/net/ipv4/netfilter/ip_nat_rule.c	2008-12-02 13:01:34.000000000 +0500
+++ linux/net/ipv4/netfilter/ip_nat_rule.c	2009-02-24 01:03:36.000000000 +0500
@@ -28,6 +28,13 @@
 
 #define NAT_VALID_HOOKS ((1<<NF_IP_PRE_ROUTING) | (1<<NF_IP_POST_ROUTING) | (1<<NF_IP_LOCAL_OUT))
 
+#if defined(CONFIG_IP_NF_TARGET_MASQUERADE) || \
+	defined(CONFIG_IP_NF_TARGET_MASQUERADE_MODULE)
+#define CONFIG_IP_NF_TARGET_TRACKSNAT
+/* Lock protects snat region inside conntrack */
+static DECLARE_RWLOCK(snat_lock);
+#endif
+
 /* Standard entry. */
 struct ipt_standard
 {
@@ -125,6 +132,14 @@ static unsigned int ipt_snat_target(stru
 	                    || ctinfo == IP_CT_RELATED + IP_CT_IS_REPLY));
 	IP_NF_ASSERT(out);
 
+#ifdef CONFIG_IP_NF_TARGET_TRACKSNAT
+	/* Use MASQUERADE index and iface event
+	   handlers to do the conntrack drop job */
+	WRITE_LOCK(&snat_lock);
+	ct->nat.masq_index = out->ifindex;
+	WRITE_UNLOCK(&snat_lock);
+#endif
+
 	return ip_nat_setup_info(ct, targinfo, hooknum);
 }
 
diff -BurpN linux-2.4.37/net/ipv4/netfilter/ipt_MASQUERADE.c linux/net/ipv4/netfilter/ipt_MASQUERADE.c
--- linux-2.4.37/net/ipv4/netfilter/ipt_MASQUERADE.c	2005-01-20 12:55:47.000000000 +0500
+++ linux/net/ipv4/netfilter/ipt_MASQUERADE.c	2009-02-24 01:04:09.000000000 +0500
@@ -140,6 +140,9 @@ static int masq_device_event(struct noti
 		/* Device was downed.  Search entire table for
 		   conntracks which were associated with that device,
 		   and forget them. */
+		/* IP address was deleted.  Search entire table for
+		   conntracks which were associated with that device,
+		   and forget them. */
 		IP_NF_ASSERT(dev->ifindex != 0);
  
 		ip_ct_iterate_cleanup(device_cmp, (void *)(long)dev->ifindex);
@@ -154,17 +157,7 @@ static int masq_inet_event(struct notifi
 			   void *ptr)
 {
 	struct net_device *dev = ((struct in_ifaddr *)ptr)->ifa_dev->dev;
-
-	if (event == NETDEV_DOWN) {
-		/* IP address was deleted.  Search entire table for
-		   conntracks which were associated with that device,
-		   and forget them. */
-		IP_NF_ASSERT(dev->ifindex != 0);
-
-		ip_ct_iterate_cleanup(device_cmp, (void *)(long)dev->ifindex);
-	}
-
-	return NOTIFY_DONE;
+	masq_device_event(this, event, dev);
 }
 
 static struct notifier_block masq_dev_notifier = {
