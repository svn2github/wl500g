--- linuz/arch/mips/bcm947xx/nvram_linux.c	2004-12-03 05:56:20.000000000 +0300
+++ linux/arch/mips/bcm947xx/nvram_linux.c	2006-09-03 14:42:19.258060552 +0400
@@ -57,6 +57,21 @@
 #define KB * 1024
 #define MB * 1024 * 1024
 
+static int
+nvram_valid(struct nvram_header *header)
+{
+	return 
+	    header->magic == NVRAM_MAGIC &&
+	    header->len >= sizeof(struct nvram_header) && 
+	    header->len <= NVRAM_SPACE &&
+#ifdef MIPSEB
+	    1;	/* oleg -- no crc check for now */
+#else
+	    (header->crc_ver_init & 255) ==
+		hndcrc8((char *) header + 9, header->len - 9, CRC8_INIT_VALUE);
+#endif
+}
+
 /* Probe for NVRAM header */
 static void __init
 early_nvram_init(void)
@@ -96,7 +112,7 @@
 	while (off <= lim) {
 		/* Windowed flash access */
 		header = (struct nvram_header *) KSEG1ADDR(base + off - NVRAM_SPACE);
-		if (header->magic == NVRAM_MAGIC)
+		if (nvram_valid(header))
 			goto found;
 		off <<= 1;
 	}
@@ -180,7 +196,8 @@
 	if (!nvram_mtd ||
 	    MTD_READ(nvram_mtd, nvram_mtd->size - NVRAM_SPACE, NVRAM_SPACE, &len, buf) ||
 	    len != NVRAM_SPACE ||
-	    header->magic != NVRAM_MAGIC) {
+	    !nvram_valid(header)) {
+		printk("_nvram_read: invalid nvram image\n");
 		/* Maybe we can recover some data from early initialization */
 		memcpy(buf, nvram_buf, NVRAM_SPACE);
 	}
