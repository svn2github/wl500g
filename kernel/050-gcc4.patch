diff -urbB linux-2.4.37.orig/include/linux/compiler.h linux/include/linux/compiler.h
--- linux-2.4.37.orig/include/linux/compiler.h	2010-02-02 00:04:46.000000000 +0300
+++ linux/include/linux/compiler.h	2010-02-21 19:21:53.000000000 +0300
@@ -1,6 +1,15 @@
 #ifndef __LINUX_COMPILER_H
 #define __LINUX_COMPILER_H
 
+#if !defined(__KERNEL__)
+/* Debian: Most of these are inappropriate for userspace. */
+/* We don't define likely, unlikely, or barrier; they're namespace-intrusive
+ and should not be needed outside of __KERNEL__. For __attribute_pure__
+ and __attribute_used__ we use glibc's definitions. */
+# include <sys/cdefs.h>
+# define __deprecated
+#else
+
 /* Somewhere in the middle of the GCC 2.96 development cycle, we implemented
    a mechanism by which the user can annotate likely branch directions and
    expect the blocks to be reordered appropriately.  Define __builtin_expect
@@ -33,15 +42,23 @@
 #define __attribute_const__	/* unimplemented */
 #endif
 
-#if __GNUC__ == 3
-#if __GNUC_MINOR__ >= 1
+#if __GNUC__ >= 4 || __GNUC__ == 3 && __GNUC_MINOR__ >= 1
 # define inline         __inline__ __attribute__((always_inline))
 # define __inline__     __inline__ __attribute__((always_inline))
 # define __inline       __inline__ __attribute__((always_inline))
 #endif
+
+/*
+ * A trick to suppress uninitialized variable warning without generating any
+ * code
+ */
+#define uninitialized_var(x) x = x
+
+
+#if __GNUC__ >= 4
+# define __compiler_offsetof(a,b) __builtin_offsetof(a,b)
 #endif
 
-#ifdef __KERNEL__
 #if __GNUC__ > 4 || __GNUC__ == 4 && __GNUC_MINOR__ >= 2
 #error "GCC >= 4.2 miscompiles kernel 2.4, do not use it!"
 #error "While the resulting kernel may boot, you will encounter random bugs"
@@ -49,7 +66,8 @@
 #error "To build with another version, for instance 3.3, please do"
 #error "   make bzImage CC=gcc-3.3 "
 #endif
-#endif
+
+#endif /* __KERNEL__ */
 
 /* no checker support, so we unconditionally define this as (null) */
 #define __user
diff -urbB linux-2.4.37.orig/include/linux/stddef.h linux/include/linux/stddef.h
--- linux-2.4.37.orig/include/linux/stddef.h	2008-12-02 11:01:34.000000000 +0300
+++ linux/include/linux/stddef.h	2008-12-15 15:53:09.000000000 +0300
@@ -9,6 +9,10 @@
 #endif
 
 #undef offsetof
+#ifdef __compiler_offsetof
+#define offsetof(TYPE,MEMBER) __compiler_offsetof(TYPE,MEMBER)
+#else
 #define offsetof(TYPE, MEMBER) ((size_t) &((TYPE *)0)->MEMBER)
+#endif
 
 #endif
diff -urbB -x '*.o' -x '.*.o.flags' linux-gcc3/arch/mips/lib/dump_tlb.c linux/arch/mips/lib/dump_tlb.c
--- linux-gcc3/arch/mips/lib/dump_tlb.c	2008-12-02 11:01:34.000000000 +0300
+++ linux/arch/mips/lib/dump_tlb.c	2008-12-16 12:00:34.000000000 +0300
@@ -32,6 +32,7 @@
 	case PM_256M:	return "256Mb";
 #endif
 	}
+	return "";
 }
 
 void dump_tlb(int first, int last)
diff -urbB -x '*.o' -x '.*.o.flags' linux-gcc3/fs/buffer.c linux/fs/buffer.c
--- linux-gcc3/fs/buffer.c	2008-12-02 11:01:34.000000000 +0300
+++ linux/fs/buffer.c	2008-12-16 11:59:15.000000000 +0300
@@ -3065,6 +3065,7 @@
 		if (ndirty > 0 || bdflush_stop())
 			interruptible_sleep_on(&bdflush_wait);
 	}
+	return 0;
 }
 
 /*
@@ -3129,6 +3130,7 @@
 			fsync_dev(NODEV);
 		run_task_queue(&tq_disk);
 	}
+	return 0;
 }
 
 static int __init bdflush_init(void)
diff -urbB -x '*.o' -x '.*.o.flags' linux-gcc3/kernel/context.c linux/kernel/context.c
--- linux-gcc3/kernel/context.c	2008-12-02 11:01:34.000000000 +0300
+++ linux/kernel/context.c	2008-12-16 11:56:28.000000000 +0300
@@ -110,6 +110,7 @@
 			spin_unlock_irq(&curtask->sigmask_lock);
 		}
 	}
+	return 0;
 }
 
 /**
diff -urbB -x '*.o' -x '.*.o.flags' linux-gcc3/kernel/module.c linux/kernel/module.c
--- linux-gcc3/kernel/module.c	2008-12-02 11:01:34.000000000 +0300
+++ linux/kernel/module.c	2008-12-16 11:53:27.000000000 +0300
@@ -726,10 +726,12 @@
 	if (mod == &kernel_module)
 		return -EINVAL;
 	if (!MOD_CAN_QUERY(mod))
+	{
 		if (put_user(0, ret))
 			return -EFAULT;
 		else
 			return 0;
+	}
 
 	space = 0;
 	for (i = 0; i < mod->ndeps; ++i) {
@@ -770,10 +772,12 @@
 	if (mod == &kernel_module)
 		return -EINVAL;
 	if (!MOD_CAN_QUERY(mod))
+	{
 		if (put_user(0, ret))
 			return -EFAULT;
 		else
 			return 0;
+	}
 
 	space = 0;
 	for (nrefs = 0, ref = mod->refs; ref ; ++nrefs, ref = ref->next_ref) {
@@ -814,10 +818,12 @@
 	unsigned long *vals;
 
 	if (!MOD_CAN_QUERY(mod))
+	{
 		if (put_user(0, ret))
 			return -EFAULT;
 		else
 			return 0;
+	}
 
 	space = mod->nsyms * 2*sizeof(void *);
 
diff -urbB -x '*.o' -x '.*.o.flags' linux-gcc3/kernel/softirq.c linux/kernel/softirq.c
--- linux-gcc3/kernel/softirq.c	2008-12-02 11:01:34.000000000 +0300
+++ linux/kernel/softirq.c	2008-12-16 11:56:00.000000000 +0300
@@ -393,6 +393,7 @@
 
 		__set_current_state(TASK_INTERRUPTIBLE);
 	}
+	return 0;
 }
 
 static __init int spawn_ksoftirqd(void)
diff -urbB -x '*.o' -x '.*.o.flags' linux-gcc3/mm/vmscan.c linux/mm/vmscan.c
--- linux-gcc3/mm/vmscan.c	2008-12-02 11:01:34.000000000 +0300
+++ linux/mm/vmscan.c	2008-12-16 11:57:26.000000000 +0300
@@ -846,6 +846,7 @@
 		kswapd_balance();
 		run_task_queue(&tq_disk);
 	}
+	return 0;
 }
 
 static int __init kswapd_init(void)
diff -urbB -x '*.o' -x '.*.o.flags' linux-gcc3/arch/mips/Makefile linux/arch/mips/Makefile
--- linux-gcc3/arch/mips/Makefile	2008-12-15 11:27:44.000000000 +0300
+++ linux/arch/mips/Makefile	2008-12-16 13:37:54.000000000 +0300
@@ -43,7 +43,7 @@
 #
 GCCFLAGS	:= -I $(TOPDIR)/include/asm/gcc
 GCCFLAGS	+= -G 0 -mno-abicalls -fno-pic -pipe
-GCCFLAGS	+= $(call check_gcc, -finline-limit=100000,)
+GCCFLAGS	+= $(call if_gcc4,,$(call check_gcc, -finline-limit=10000,))
 LINKFLAGS	+= -G 0 -static -n -nostdlib
 MODFLAGS	+= -mlong-calls -fno-common
 
diff -urbB -x '*.o' -x '.*.o.flags' linux-gcc3/arch/mips64/Makefile linux/arch/mips64/Makefile
--- linux-gcc3/arch/mips64/Makefile	2008-12-02 11:01:34.000000000 +0300
+++ linux/arch/mips64/Makefile	2008-12-16 13:37:49.000000000 +0300
@@ -40,7 +40,7 @@
 #
 GCCFLAGS	:= -I $(TOPDIR)/include/asm/gcc
 GCCFLAGS	+= -G 0 -mno-abicalls -fno-pic -Wa,--trap -pipe
-GCCFLAGS	+= $(call check_gcc, -finline-limit=100000,)
+GCCFLAGS	+= $(call if_gcc4,,$(call check_gcc, -finline-limit=10000,))
 LINKFLAGS	+= -G 0 -static -n
 MODFLAGS	+= -mlong-calls
 
