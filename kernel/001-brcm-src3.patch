--- linux.old/arch/mips/bcm947xx/nvram_linux.c	2007-11-19 06:43:58.000000000 +0300
+++ linux.3034/arch/mips/bcm947xx/nvram_linux.c	2008-08-05 07:11:51.000000000 +0400
@@ -261,7 +265,7 @@ early_nvram_init(void)
 
 		case SFLASH_ST:
 		case SFLASH_AT:
-			if ((info = sflash_init(cc)) == NULL)
+			if ((info = sflash_init(sbh, cc)) == NULL)
 				return;
 			lim = info->size;
 			break;
--- linux.old/drivers/mtd/devices/sflash.c	2009-12-20 13:47:02.000000000 +0300
+++ linux.3034/drivers/mtd/devices/sflash.c	2009-12-20 13:53:22.000000000 +0300
@@ -39,6 +39,7 @@ extern struct mtd_partition * init_mtd_p
 #endif
 
 struct sflash_mtd {
+	sb_t *sbh;
 	chipcregs_t *cc;
 	struct semaphore lock;
 	struct mtd_info mtd;
@@ -55,7 +56,7 @@ sflash_mtd_poll(struct sflash_mtd *sflas
 	int ret = 0;
 
 	for (;;) {
-		if (!sflash_poll(sflash->cc, offset)) {
+		if (!sflash_poll(sflash->sbh, sflash->cc, offset)) {
 			ret = 0;
 			break;
 		}
@@ -90,7 +91,7 @@ sflash_mtd_read(struct mtd_info *mtd, lo
 
 	*retlen = 0;
 	while (len) {
-		if ((bytes = sflash_read(sflash->cc, (uint) from, len, buf)) < 0) {
+		if ((bytes = sflash_read(sflash->sbh, sflash->cc, (uint) from, len, buf)) < 0) {
 			ret = bytes;
 			break;
 		}
@@ -121,7 +122,7 @@ sflash_mtd_write(struct mtd_info *mtd, l
 
 	*retlen = 0;
 	while (len) {
-		if ((bytes = sflash_write(sflash->cc, (uint) to, len, buf)) < 0) {
+		if ((bytes = sflash_write(sflash->sbh, sflash->cc, (uint) to, len, buf)) < 0) {
 			ret = bytes;
 			break;
 		}
@@ -161,7 +162,7 @@ sflash_mtd_erase(struct mtd_info *mtd, s
 		for (j = 0; j < mtd->eraseregions[i].numblocks; j++) {
 			if (addr == mtd->eraseregions[i].offset + mtd->eraseregions[i].erasesize * j &&
 			    len >= mtd->eraseregions[i].erasesize) {
-				if ((ret = sflash_erase(sflash->cc, addr)) < 0)
+				if ((ret = sflash_erase(sflash->sbh, sflash->cc, addr)) < 0)
 					break;
 				if ((ret = sflash_mtd_poll(sflash, addr, 10 * HZ)))
 					break;
@@ -212,6 +213,13 @@ sflash_mtd_init(void)
 	memset(&sflash, 0, sizeof(struct sflash_mtd));
 	init_MUTEX(&sflash.lock);
 
+        /* attach to the backplane */
+	if (!(sflash.sbh = sb_kattach(SB_OSH))) {
+		printk(KERN_ERR "sflash: error attaching to backplane\n");
+		ret = -EIO;
+		goto fail;
+	}
+
 	/* Map registers and flash base */
 	if (!(sflash.cc = ioremap_nocache(pci_resource_start(pdev, 0),
 					  pci_resource_len(pdev, 0)))) {
@@ -221,7 +229,7 @@ sflash_mtd_init(void)
 	}
 
 	/* Initialize serial flash access */
-	info = sflash_init(sflash.cc);
+	info = sflash_init(sflash.sbh, sflash.cc);
 
 	if (!info) {
 		printk(KERN_ERR "sflash: found no supported devices\n");
@@ -266,6 +274,8 @@ sflash_mtd_init(void)
  fail:
 	if (sflash.cc)
 		iounmap((void *) sflash.cc);
+	if (sflash.sbh)
+		sb_detach(sflash.sbh);
 	return ret;
 }
 
@@ -278,6 +288,7 @@ sflash_mtd_exit(void)
 	del_mtd_device(&sflash.mtd);
 #endif
 	iounmap((void *) sflash.cc);
+	sb_detach(sflash.sbh);
 }
 
 module_init(sflash_mtd_init);
