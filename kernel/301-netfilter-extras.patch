diff -BurN linuz/Documentation/Configure.help linux/Documentation/Configure.help
--- linuz/Documentation/Configure.help	2005-05-05 20:15:47.000000000 +0000
+++ linux/Documentation/Configure.help	2005-05-05 20:23:25.000000000 +0000
@@ -2739,6 +2747,47 @@
 
  
 
+Nth match support
+CONFIG_IP_NF_MATCH_NTH
+  This option adds a `Nth' match, which allow you to make
+  rules that match every Nth packet.  By default there are 
+  16 different counters.
+
+[options]
+   --every     Nth              Match every Nth packet
+  [--counter]  num              Use counter 0-15 (default:0)
+  [--start]    num              Initialize the counter at the number 'num'
+                                instead of 0. Must be between 0 and Nth-1
+  [--packet]   num              Match on 'num' packet. Must be between 0
+                                and Nth-1.
+
+                                If --packet is used for a counter than
+                                there must be Nth number of --packet
+                                rules, covering all values between 0 and
+                                Nth-1 inclusively.
+ 
+  If you want to compile it as a module, say M here and read
+  Documentation/modules.txt.  If unsure, say `N'.
+
+
+psd match support
+CONFIG_IP_NF_MATCH_PSD
+  This option adds a `psd' match, which allows you to create rules in
+  any iptables table wich will detect TCP and UDP port scans.
+ 
+  If you want to compile it as a module, say M here and read
+  Documentation/modules.txt.  If unsure, say `N'.
+
+
+Nth match support
+CONFIG_IP_NF_MATCH_RANDOM
+  This option adds a `random' match,
+  which allow you to match packets randomly
+  following a given probability.
+ 
+  If you want to compile it as a module, say M here and read
+  Documentation/modules.txt.  If unsure, say `N'.
+
 TOS match support
 CONFIG_IP_NF_MATCH_TOS
   TOS matching allows you to match packets based on the Type Of
--- linux-2.4.35.5-orig/net/ipv4/netfilter/Config.in	2007-12-17 02:16:04.000000000 +0300
+++ linux/net/ipv4/netfilter/Config.in	2008-01-01 23:56:45.000000000 +0300
@@ -66,6 +122,27 @@
           define_tristate CONFIG_IP_NF_NAT_AMANDA $CONFIG_IP_NF_NAT
         fi
       fi
+      if [ "$CONFIG_IP_NF_H323" = "m" ]; then
+       define_tristate CONFIG_IP_NF_NAT_H323 m
+      else
+       if [ "$CONFIG_IP_NF_H323" = "y" ]; then
+         define_tristate CONFIG_IP_NF_NAT_H323 $CONFIG_IP_NF_NAT
+       fi
+      fi
+      if [ "$CONFIG_IP_NF_RTSP" = "m" ]; then
+        define_tristate CONFIG_IP_NF_NAT_RTSP m
+      else
+       if [ "$CONFIG_IP_NF_RTSP" = "y" ]; then
+         define_tristate CONFIG_IP_NF_NAT_RTSP $CONFIG_IP_NF_NAT
+       fi
+      fi
+      if [ "$CONFIG_IP_NF_MMS" = "m" ]; then
+       define_tristate CONFIG_IP_NF_NAT_MMS m
+      else
+       if [ "$CONFIG_IP_NF_MMS" = "y" ]; then
+         define_tristate CONFIG_IP_NF_NAT_MMS $CONFIG_IP_NF_NAT
+       fi
+      fi
       if [ "$CONFIG_EXPERIMENTAL" = "y" ]; then
         dep_tristate '    Basic SNMP-ALG support (EXPERIMENTAL)' CONFIG_IP_NF_NAT_SNMP_BASIC $CONFIG_IP_NF_NAT
       fi
diff -ubB linux/include/linux/netfilter_ipv4/ipt_connmark.h iptables/include/linux/netfilter_ipv4/ipt_connmark.h
--- linux/include/linux/netfilter_ipv4/ipt_connmark.h	2008-01-02 17:51:49.000000000 +0300
+++ iptables/include/linux/netfilter_ipv4/ipt_connmark.h	2007-01-23 15:49:51.000000000 +0300
@@ -11,7 +11,11 @@
  */
 
 struct ipt_connmark_info {
+#ifdef KERNEL_64_USERSPACE_32
+	unsigned long long mark, mask;
+#else
 	unsigned long mark, mask;
+#endif
 	u_int8_t invert;
 };
 
diff -ubB linux/include/linux/netfilter_ipv4/ipt_CONNMARK.h iptables/include/linux/netfilter_ipv4/ipt_CONNMARK.h
--- linux/include/linux/netfilter_ipv4/ipt_CONNMARK.h	2008-01-02 17:51:49.000000000 +0300
+++ iptables/include/linux/netfilter_ipv4/ipt_CONNMARK.h	2007-01-23 15:49:51.000000000 +0300
@@ -17,8 +17,13 @@
 };
 
 struct ipt_connmark_target_info {
+#ifdef KERNEL_64_USERSPACE_32
+	unsigned long long mark;
+	unsigned long long mask;
+#else
 	unsigned long mark;
 	unsigned long mask;
+#endif
 	u_int8_t mode;
 };
 
diff -ubB linux/include/linux/netfilter_ipv4/ipt_conntrack.h iptables/include/linux/netfilter_ipv4/ipt_conntrack.h
--- linux/include/linux/netfilter_ipv4/ipt_conntrack.h	2007-12-17 02:16:04.000000000 +0300
+++ iptables/include/linux/netfilter_ipv4/ipt_conntrack.h	2007-04-30 03:03:09.000000000 +0400
@@ -5,11 +5,27 @@
 #ifndef _IPT_CONNTRACK_H
 #define _IPT_CONNTRACK_H
 
+/* backwards compatibility crap. only exists in userspace - HW */
+#include <linux/version.h>
+#ifndef KERNEL_VERSION
+#define KERNEL_VERSION(a,b,c) (((a) << 16) | ((b) << 8) | (c))
+#endif
+
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,4,18)) || !defined IPS_EXPECTED
+#define IPS_EXPECTED	(1 << 0)
+#define IPS_SEEN_REPLY	(1 << 1)
+#define IPS_ASSURED	(1 << 2)
+#define IP_CT_DIR_ORIGINAL	0
+#define IP_CT_DIR_REPLY		1
+#define IP_CT_DIR_MAX		2
+#endif
+
 #define IPT_CONNTRACK_STATE_BIT(ctinfo) (1 << ((ctinfo)%IP_CT_IS_REPLY+1))
 #define IPT_CONNTRACK_STATE_INVALID (1 << 0)
 
 #define IPT_CONNTRACK_STATE_SNAT (1 << (IP_CT_NUMBER + 1))
 #define IPT_CONNTRACK_STATE_DNAT (1 << (IP_CT_NUMBER + 2))
+#define IPT_CONNTRACK_STATE_UNTRACKED (1 << (IP_CT_NUMBER + 3))
 
 /* flags, invflags: */
 #define IPT_CONNTRACK_STATE	0x01
@@ -21,14 +39,39 @@
 #define IPT_CONNTRACK_STATUS	0x40
 #define IPT_CONNTRACK_EXPIRES	0x80
 
+/* This is exposed to userspace, so remains frozen in time. */
+struct ip_conntrack_old_tuple
+{
+	struct {
+		u_int32_t ip;
+		union {
+			u_int16_t all;
+		} u;
+	} src;
+
+	struct {
+		u_int32_t ip;
+		union {
+			u_int16_t all;
+		} u;
+
+		/* The protocol. */
+		u_int16_t protonum;
+	} dst;
+};
+
 struct ipt_conntrack_info
 {
 	unsigned int statemask, statusmask;
 
-	struct ip_conntrack_tuple tuple[IP_CT_DIR_MAX];
+	struct ip_conntrack_old_tuple tuple[IP_CT_DIR_MAX];
 	struct in_addr sipmsk[IP_CT_DIR_MAX], dipmsk[IP_CT_DIR_MAX];
 
+#ifdef KERNEL_64_USERSPACE_32
+	unsigned long long expires_min, expires_max;
+#else
 	unsigned long expires_min, expires_max;
+#endif
 
 	/* Flags word */
 	u_int8_t flags;
diff -ubB linux/include/linux/netfilter_ipv4/ipt_limit.h iptables/include/linux/netfilter_ipv4/ipt_limit.h
--- linux/include/linux/netfilter_ipv4/ipt_limit.h	2007-12-17 02:16:04.000000000 +0300
+++ iptables/include/linux/netfilter_ipv4/ipt_limit.h	2007-01-23 15:49:51.000000000 +0300
@@ -10,12 +10,17 @@
 	u_int32_t avg;    /* Average secs between packets * scale */
 	u_int32_t burst;  /* Period multiplier for upper limit. */
 
+#ifdef KERNEL_64_USERSPACE_32
+	u_int64_t prev;
+	u_int64_t placeholder;
+#else
 	/* Used internally by the kernel */
 	unsigned long prev;
-	u_int32_t credit;
-	u_int32_t credit_cap, cost;
-
 	/* Ugly, ugly fucker. */
 	struct ipt_rateinfo *master;
+#endif
+
+	u_int32_t credit;
+	u_int32_t credit_cap, cost;
 };
 #endif /*_IPT_RATE_H*/
diff -ubB linux/include/linux/netfilter_ipv4/ipt_mark.h iptables/include/linux/netfilter_ipv4/ipt_mark.h
--- linux/include/linux/netfilter_ipv4/ipt_mark.h	2007-12-17 02:16:04.000000000 +0300
+++ iptables/include/linux/netfilter_ipv4/ipt_mark.h	2007-01-23 15:49:51.000000000 +0300
@@ -2,7 +2,11 @@
 #define _IPT_MARK_H
 
 struct ipt_mark_info {
+#ifdef KERNEL_64_USERSPACE_32
+    unsigned long long mark, mask;
+#else
     unsigned long mark, mask;
+#endif
     u_int8_t invert;
 };
 
diff -ubB linux/include/linux/netfilter_ipv4/ipt_MARK.h iptables/include/linux/netfilter_ipv4/ipt_MARK.h
--- linux/include/linux/netfilter_ipv4/ipt_MARK.h	2007-12-17 02:16:04.000000000 +0300
+++ iptables/include/linux/netfilter_ipv4/ipt_MARK.h	2007-01-23 15:49:51.000000000 +0300
@@ -2,7 +2,26 @@
 #define _IPT_MARK_H_target
 
 struct ipt_mark_target_info {
+#ifdef KERNEL_64_USERSPACE_32
+	unsigned long long mark;
+#else
 	unsigned long mark;
+#endif
+};
+
+enum {
+	IPT_MARK_SET=0,
+	IPT_MARK_AND,
+	IPT_MARK_OR
+};
+
+struct ipt_mark_target_info_v1 {
+#ifdef KERNEL_64_USERSPACE_32
+	unsigned long long mark;
+#else
+	unsigned long mark;
+#endif
+	u_int8_t mode;
 };
 
 #endif /*_IPT_MARK_H_target*/
diff -ubB linux/include/linux/netfilter_ipv4/ipt_ULOG.h iptables/include/linux/netfilter_ipv4/ipt_ULOG.h
--- linux/include/linux/netfilter_ipv4/ipt_ULOG.h	2007-12-17 02:16:04.000000000 +0300
+++ iptables/include/linux/netfilter_ipv4/ipt_ULOG.h	2007-01-23 15:49:51.000000000 +0300
@@ -11,6 +11,9 @@
 #define NETLINK_NFLOG 	5
 #endif
 
+#define ULOG_DEFAULT_NLGROUP	1
+#define ULOG_DEFAULT_QTHRESHOLD	1
+
 #define ULOG_MAC_LEN	80
 #define ULOG_PREFIX_LEN	32
 
@@ -23,8 +26,13 @@
 /* private data structure for each rule with a ULOG target */
 struct ipt_ulog_info {
 	unsigned int nl_group;
+#ifdef KERNEL_64_USERSPACE_32
+	unsigned long long copy_range;
+	unsigned long long qthreshold;
+#else
 	size_t copy_range;
 	size_t qthreshold;
+#endif
 	char prefix[ULOG_PREFIX_LEN];
 };
 
