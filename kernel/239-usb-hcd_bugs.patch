USB: fix usb_calc_bus_time

 usb_calc_bus_time() function returns the time in nanoseconds 
 while the HS_USECS and HS_USECS_ISO are microseconds.

 Use a more correct calculation for highspeed bit times.

  http://bugzilla.kernel.org/show_bug.cgi?id=3604

--- linux-2.4.37/drivers/usb/hcd.h	2009-04-19 22:33:42.000000000 +0400
+++ linux/drivers/usb/hcd.h	2009-04-29 11:40:10.000000000 +0400
@@ -239,17 +239,19 @@
 extern int usb_check_bandwidth (struct usb_device *dev, struct urb *urb);
 
 /*
- * Ceiling microseconds (typical) for that many bytes at high speed
+ * Ceiling [nano/micro]seconds (typical) for that many bytes at high speed
  * ISO is a bit less, no ACK ... from USB 2.0 spec, 5.11.3 (and needed
  * to preallocate bandwidth)
  */
 #define USB2_HOST_DELAY	5	/* nsec, guess */
-#define HS_USECS(bytes) NS_TO_US ( ((55 * 8 * 2083)/1000) \
-	+ ((2083UL * (3167 + BitTime (bytes)))/1000) \
-	+ USB2_HOST_DELAY)
-#define HS_USECS_ISO(bytes) NS_TO_US ( ((long)(38 * 8 * 2.083)) \
-	+ ((2083UL * (3167 + BitTime (bytes)))/1000) \
-	+ USB2_HOST_DELAY)
+#define HS_NSECS(bytes) (((55 * 8 * 2083) \
+        + (2083UL * (3 + BitTime(bytes))))/1000 \
+        + USB2_HOST_DELAY)
+#define HS_NSECS_ISO(bytes) (((38 * 8 * 2083) \
+        + (2083UL * (3 + BitTime(bytes))))/1000 \
+        + USB2_HOST_DELAY)
+#define HS_USECS(bytes) NS_TO_US (HS_NSECS(bytes))
+#define HS_USECS_ISO(bytes) NS_TO_US (HS_NSECS_ISO(bytes))
 
 extern long usb_calc_bus_time (int speed, int is_input,
 			int isoc, int bytecount);
--- linux-2.4.37/drivers/usb/usb.c	2009-04-29 11:27:06.000000000 +0400
+++ linux/drivers/usb/usb.c	2009-04-29 11:40:44.000000000 +0400
@@ -265,9 +265,9 @@ long usb_calc_bus_time (int speed, int i
 	case USB_SPEED_HIGH:	/* ISOC or INTR */
 		// FIXME adjust for input vs output
 		if (isoc)
-			tmp = HS_USECS (bytecount);
+			tmp = HS_NSECS (bytecount);
 		else
-			tmp = HS_USECS_ISO (bytecount);
+			tmp = HS_NSECS_ISO (bytecount);
 		return tmp;
 	default:
 		dbg ("bogus device speed!");
