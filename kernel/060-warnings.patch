Eliminate various warnings

diff -uBp a/net/core/neighbour.c b/net/core/neighbour.c
--- a/net/core/neighbour.c	2010-09-06 09:37:37.000000000 +0400
+++ b/net/core/neighbour.c	2010-09-06 15:34:05.000000000 +0400
@@ -1318,7 +1318,7 @@ void neigh_table_init(struct neigh_table
 	neigh_tables    = tbl;
 	write_unlock(&neigh_tbl_lock);
 
-	if (unlikely(tmp)) {
+	if (unlikely(tmp != NULL)) {
 		printk(KERN_ERR "NEIGH: Registering multiple tables for "
 			"family %d\n", tbl->family);
 		dump_stack();
diff -urBp a/fs/hfsplus/bnode.c b/fs/hfsplus/bnode.c
--- a/fs/hfsplus/bnode.c	2010-09-06 14:44:42.000000000 +0400
+++ b/fs/hfsplus/bnode.c	2010-09-06 14:47:44.000000000 +0400
@@ -56,7 +56,7 @@ void hfsplus_bnode_readbytes(hfsplus_bno
 
 	while ((len -= l)) {
 		buf += l;
-		l = min(len, PAGE_CACHE_SIZE);
+		l = min(len, (unsigned long)PAGE_CACHE_SIZE);
 		memcpy(buf, hfsplus_kmap(*pagep), l);
 		hfsplus_kunmap(*pagep++);
 	}
@@ -102,7 +102,7 @@ void hfsplus_bnode_writebytes(hfsplus_bn
 
 	while ((len -= l)) {
 		buf += l;
-		l = min(len, PAGE_CACHE_SIZE);
+		l = min(len, (unsigned long)PAGE_CACHE_SIZE);
 		memcpy(hfsplus_kmap(*pagep), buf, l);
 		set_page_dirty(*pagep);
 		hfsplus_kunmap(*pagep++);
@@ -142,7 +142,7 @@ void hfsplus_bnode_copybytes(hfsplus_bno
 		hfsplus_kunmap(*dst_page++);
 
 		while ((len -= l)) {
-			l = min(len, PAGE_CACHE_SIZE);
+			l = min(len, (unsigned long)PAGE_CACHE_SIZE);
 			memcpy(hfsplus_kmap(*dst_page), hfsplus_kmap(*src_page), l);
 			hfsplus_kunmap(*src_page++);
 			set_page_dirty(*dst_page);
@@ -249,7 +249,7 @@ void hfsplus_bnode_movebytes(hfsplus_bno
 			hfsplus_kunmap(*dst_page++);
 
 			while ((len -= l)) {
-				l = min(len, PAGE_CACHE_SIZE);
+				l = min(len, (unsigned long)PAGE_CACHE_SIZE);
 				memmove(hfsplus_kmap(*dst_page), hfsplus_kmap(*src_page), l);
 				hfsplus_kunmap(*src_page++);
 				set_page_dirty(*dst_page);
--
