diff -BurpN rp-l2tp-0.4/main.c rp-l2tp/main.c
--- rp-l2tp-0.4/main.c	2009-08-31 06:06:57.000000000 +0000
+++ rp-l2tp/main.c	2009-08-31 06:07:13.000000000 +0000
@@ -39,6 +39,13 @@ usage(int argc, char *argv[], int exitco
     exit(exitcode);
 }
 
+static void
+sighandler(int signum)
+{
+    l2tp_cleanup();
+    exit(EXIT_FAILURE);
+}
+
 int
 main(int argc, char *argv[])
 {
@@ -114,6 +121,9 @@ main(int argc, char *argv[])
 	}
     }
 
+    signal(SIGTERM, sighandler);
+    signal(SIGINT, sighandler);
+
     while(1) {
 	i = Event_HandleEvent(es);
 	if (i < 0) {
diff -BurpN rp-l2tp-0.4/tunnel.c rp-l2tp/tunnel.c
--- rp-l2tp-0.4/tunnel.c	2009-08-31 06:01:57.000000000 +0000
+++ rp-l2tp/tunnel.c	2011-04-09 20:15:59.995157000 +0000
@@ -1897,9 +1897,15 @@ void
 l2tp_tunnel_stop_tunnel(l2tp_tunnel *tunnel,
 			char const *reason)
 {
+    struct timeval t;
+
     /* Do not send StopCCN if we've received one already */
-    if (tunnel->state != TUNNEL_RECEIVED_STOP_CCN &&
-	tunnel->state != TUNNEL_SENT_STOP_CCN) {
+    if (tunnel->state == TUNNEL_RECEIVED_STOP_CCN && tunnel->hello_handler) {
+	t.tv_sec = 0;
+	t.tv_usec = 100000;
+	Event_ChangeTimeout(tunnel->hello_handler, t);
+    } else
+    if (tunnel->state != TUNNEL_SENT_STOP_CCN) {
 	tunnel_send_StopCCN(tunnel, RESULT_SHUTTING_DOWN, 0, reason);
     }
 }
