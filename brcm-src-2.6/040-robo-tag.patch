--- src/shared/bcmrobo.c.orig	2008-03-07 23:05:52.000000000 +0300
+++ src/shared/bcmrobo.c	2008-03-08 18:30:03.000000000 +0300
@@ -776,7 +776,7 @@
 	uint32 val32;
 	pdesc_t *pdesc;
 	int pdescsz;
-	uint16 vid;
+	uint16 vid, vid0;
 	uint8 arl_entry[8] = { 0 }, arl_entry1[8] = { 0 };
 
 	/* Enable management interface access */
@@ -838,6 +838,8 @@
 		pdescsz = sizeof(pdesc97) / sizeof(pdesc_t);
 	}
 
+	vid0 = getintvar(robo->vars, "vlan0tag");
+
 	/* setup each vlan. max. 16 vlans. */
 	/* force vlan id to be equal to vlan number */
 	for (vid = 0; vid < VLAN_NUMVLANS; vid ++) {
@@ -907,9 +909,10 @@
 #else
 #define	FL	FLAG_UNTAG
 #endif /* _CFE_ */
-			if (!pdesc[pid].cpu || strchr(port, FL)) {
+			if ((!pdesc[pid].cpu && !strchr(port, FLAG_TAGGED)) || 
+			    strchr(port, FL)) {
 				val16 = ((0 << 13) |		/* priority - always 0 */
-				         vid);			/* vlan id */
+				         vid0 | vid);	/* vlan id */
 				robo->ops->write_reg(robo, PAGE_VLAN, pdesc[pid].ptagr,
 				                     &val16, sizeof(val16));
 			}
@@ -981,26 +984,26 @@
 			/* VLAN Table Access Register (Page 0x34, Address 0x08) */
 			val16 = ((1 << 13) | 	/* start command */
 				 (1 << 12) |	/* write state */
-				 vid);		/* vlan id */
+				 vid0 | vid);	/* vlan id */
 			robo->ops->write_reg(robo, PAGE_VLAN, REG_VLAN_ACCESS_5365, &val16,
 			                     sizeof(val16));
 		} else if (robo->devid == DEVID5325) {
 			if (robo->corerev < 3) {
 				val32 |= ((1 << 20) |		/* valid write */
-				          ((vid >> 4) << 12));	/* vlan id bit[11:4] */
+					  ((vid0 >> 4) << 12));	/* vlan id bit[11:4] */
			} else {
 				val32 |= ((1 << 24) |		/* valid write */
-				          (vid << 12));	/* vlan id bit[11:0] */
+					  ((vid0 | vid) << 12));	/* vlan id bit[11:0] */
			}
 			ET_MSG(("bcm_robo_config_vlan: programming REG_VLAN_WRITE %08x\n", val32));
 
 			/* VLAN Write Register (Page 0x34, Address 0x08-0x0B) */
 			robo->ops->write_reg(robo, PAGE_VLAN, REG_VLAN_WRITE, &val32,
 			                     sizeof(val32));
 			/* VLAN Table Access Register (Page 0x34, Address 0x06-0x07) */
 			val16 = ((1 << 13) |	/* start command */
 			         (1 << 12) |	/* write state */
-			         vid);		/* vlan id */
+			         vid0 | vid);	/* vlan id */
 			robo->ops->write_reg(robo, PAGE_VLAN, REG_VLAN_ACCESS, &val16,
 			                     sizeof(val16));
 		} else {
@@ -1072,7 +1075,7 @@ vlan_setup:
 			robo->ops->write_reg(robo, PAGE_VTBL, vtble, &val32,
 			                     sizeof(val32));
 			/* VLAN Table Address Index Reg (Page 0x05, Address 0x61-0x62/0x81-0x82) */
-			val16 = vid;        /* vlan id */
+			val16 = vid0 | vid;	/* vlan id */
 			robo->ops->write_reg(robo, PAGE_VTBL, vtbli, &val16,
 			                     sizeof(val16));
 
