--- src/shared/hndchipc.c	2007-03-20 15:23:45.000000000 +0300
+++ src.5354/shared/hndchipc.c	2007-01-25 20:52:12.000000000 +0300
@@ -69,6 +69,9 @@ BCMINITFN(si_serial_init)
 	cc = (chipcregs_t *)si_setcoreidx(sih, SI_CC_IDX);
 	ASSERT(cc);
 
+	/* Default value */
+	div = 48;
+
 	/* Determine core revision and capabilities */
 	rev = sih->ccrev;
 	cap = sih->cccaps;
@@ -84,8 +87,14 @@ BCMINITFN(si_serial_init)
 		                          R_REG(osh, &cc->clockcontrol_m2));
 		div = 1;
 	} else {
+		/* 5354 chip common uart uses a constant clock
+		 * frequency of 25MHz */
+		if (rev == 20) {
+			/* Set the override bit so we don't divide it */
+			W_REG(osh, &cc->corecontrol, CC_UARTCLKO);
+			baud_base = 25000000;
+		} else if (rev >= 11 && rev != 15) {
 		/* Fixed ALP clock */
-		if (rev >= 11 && rev != 15) {
 			baud_base = si_alp_clock(sih);
 			div = 1;
 			/* Turn off UART clock before switching clock source */
--- src/shared/siutils.c	2007-03-20 15:23:45.000000000 +0300
+++ src.5354/shared/siutils.c	2007-01-25 20:52:12.000000000 +0300
@@ -1167,6 +1167,10 @@ BCMINITFN(si_clock)(si_t *sih)
 	if (sih->chipc == BCM5365_CHIP_ID)
 	{
 		rate = 200000000; /* PLL_TYPE3 */
+	} else if (sih->chip == BCM5354_CHIP_ID)
+	{
+		/* 5354 has a constant sb clock of 120MHz */
+		rate = 120000000;
 	} else {
 	/* calculate rate */
 	rate = si_clock_rate(pll_type, n, m);
--- src/include/sbchipc.h	2007-11-02 23:10:14.006469543 +0300
+++ src.5354/include/sbchipc.h	2007-11-02 23:11:42.624954460 +0300
@@ -309,6 +309,9 @@
 /* HT clock */
 #define HT_CLOCK		80000000
 
+/* watchdog clock */
+#define	WATCHDOG_CLOCK_5354	32000		/* Hz */
+
 /* corecontrol */
 #define CC_UARTCLKO		0x00000001		/* Drive UART with internal clock */
 #define CC_SE			0x00000002		/* sync clk out enable (corerev >= 3) */
