[IPV6] ndisc updates from upstream

 22441cfa0c70dcd457f3c081fcf285c3bd155824 IPV6: Fix default gateway criteria wrt. HIGH/LOW preference radv option
 421f099bc555c5f1516fdf5060de1d6bb5f51002 [IPV6] net/ipv6/ndisc.c: remove unused variable
 24fc7b86dc0470616803be2f921c8cd5c459175d ipv6: silence log messages for locally generated multicast
 a6fa32866567351503db8a5c3466a676ba08595f ipv6: Log the explicit address that triggered DAD failure
 d73f08011bc30c03a2bcb1ccd880e4be84aea269 ipv6/ndisc: join error paths

---
 include/linux/icmpv6.h |    6 ++++--
 net/ipv6/ndisc.c       |   31 +++++++++++++++++--------------
 2 files changed, 21 insertions(+), 16 deletions(-)

diff --git a/include/linux/icmpv6.h b/include/linux/icmpv6.h
--- a/include/linux/icmpv6.h
+++ b/include/linux/icmpv6.h
@@ -40,16 +40,18 @@ struct icmp6hdr {
                 struct icmpv6_nd_ra {
 			__u8		hop_limit;
 #if defined(__LITTLE_ENDIAN_BITFIELD)
-			__u8		reserved:4,
+			__u8		reserved:3,
 					router_pref:2,
+					home_agent:1,
 					other:1,
 					managed:1;
 
 #elif defined(__BIG_ENDIAN_BITFIELD)
 			__u8		managed:1,
 					other:1,
+					home_agent:1,
 					router_pref:2,
-					reserved:4;
+					reserved:3;
 #else
 #error	"Please fix <asm/byteorder.h>"
 #endif
diff --git a/net/ipv6/ndisc.c b/net/ipv6/ndisc.c
--- a/net/ipv6/ndisc.c
+++ b/net/ipv6/ndisc.c
@@ -881,10 +881,15 @@ static void ndisc_recv_na(struct sk_buff
 		   is invalid, but ndisc specs say nothing
 		   about it. It could be misconfiguration, or
 		   an smart proxy agent tries to help us :-)
+
+		   We should not print the error if NA has been
+		   received from loopback - it is just our own
+		   unsolicited advertisement.
 		 */
-		ND_PRINTK1(KERN_WARNING
-			   "ICMPv6 NA: someone advertises our address on %s!\n",
-			   ifp->idev->dev->name);
+		if (skb->pkt_type != PACKET_LOOPBACK)
+			ND_PRINTK1(KERN_WARNING
+			   "ICMPv6 NA: someone advertises our address " NIP6_FMT " on %s!\n",
+			   NIP6(ifp->addr), ifp->idev->dev->name);
 		in6_ifa_put(ifp);
 		return;
 	}
@@ -1117,7 +1122,7 @@ static void ndisc_router_discovery(struc
 		}
 		neigh->flags |= NTF_ROUTER;
 	} else if (rt) {
-		rt->rt6i_flags |= (rt->rt6i_flags & ~RTF_PREF_MASK) | RTF_PREF(pref);
+		rt->rt6i_flags = (rt->rt6i_flags & ~RTF_PREF_MASK) | RTF_PREF(pref);
 	}
 
 	if (rt)
@@ -1360,7 +1360,6 @@ void ndisc_send_redirect(struct sk_buff *skb, struct neighbour *neigh,
 	u8 *opt;
 	int rd_len;
 	int err;
-	int hlen;
 	u8 ha_buf[MAX_ADDR_LEN], *ha = NULL;
 
 	dev = skb->dev;
@@ -1394,13 +1399,10 @@ void ndisc_send_redirect(struct sk_buff 
 	if (rt->rt6i_flags & RTF_GATEWAY) {
 		ND_PRINTK2(KERN_WARNING
 			   "ICMPv6 Redirect: destination is not a neighbour.\n");
-		dst_release(dst);
-		return;
-	}
-	if (!xrlim_allow(dst, 1*HZ)) {
-		dst_release(dst);
-		return;
+		goto release;
 	}
+	if (!xrlim_allow(dst, 1*HZ))
+		goto release;
 
 	if (dev->addr_len) {
 		read_lock_bh(&neigh->lock);
@@ -1426,11 +1428,9 @@ void ndisc_send_redirect(struct sk_buff 
 		ND_PRINTK0(KERN_ERR
 			   "ICMPv6 Redirect: %s() failed to allocate an skb.\n",
 			   __FUNCTION__);
-		dst_release(dst);
-		return;
+		goto release;
 	}
 
-	hlen = 0;
 
 	skb_reserve(buff, LL_RESERVED_SPACE(dev));
 	ip6_nd_hdr(sk, buff, dev, &saddr_buf, &ipv6_hdr(skb)->saddr,
@@ -1488,6 +1489,10 @@ void ndisc_send_redirect(struct sk_buff 
 
 	if (likely(idev != NULL))
 		in6_dev_put(idev);
+	return;
+
+release:
+	dst_release(dst);
 }
 
 static void pndisc_redo(struct sk_buff *skb)
-- 
