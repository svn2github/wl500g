 fa0f5aa74316c636427ac92dad0bc5714c34ca17 net_sched: qdisc_alloc_handle() can be too slow
 fba373d2bb267eaeba85579dd04b91435df8c83b pkt_sched: add cond_resched() to class and qdisc dump

---
 net/sched/sch_api.c |   16 +++++++++++-----
 1 file changed, 11 insertions(+), 5 deletions(-)

diff --git a/net/sched/sch_api.c b/net/sched/sch_api.c
--- a/net/sched/sch_api.c
+++ b/net/sched/sch_api.c
@@ -321,20 +321,24 @@ void qdisc_watchdog_cancel(struct qdisc_
 }
 EXPORT_SYMBOL(qdisc_watchdog_cancel);
 
-/* Allocate an unique handle from space managed by kernel */
-
+/* Allocate an unique handle from space managed by kernel
+ * Possible range is [8000-FFFF]:0000 (0x8000 values)
+ */
 static u32 qdisc_alloc_handle(struct net_device *dev)
 {
-	int i = 0x10000;
+	int i = 0x8000;
 	static u32 autohandle = TC_H_MAKE(0x80000000U, 0);
 
 	do {
 		autohandle += TC_H_MAKE(0x10000U, 0);
 		if (autohandle == TC_H_MAKE(TC_H_ROOT, 0))
 			autohandle = TC_H_MAKE(0x80000000U, 0);
-	} while	(qdisc_lookup(dev, autohandle) && --i > 0);
+		if (!qdisc_lookup(dev, autohandle))
+			return autohandle;
+		cond_resched();
+	} while	(--i > 0);
 
-	return i>0 ? autohandle : 0;
+	return 0;
 }
 
 /* Attach toplevel qdisc to device dev */
@@ -823,6 +827,7 @@ static int tc_fill_qdisc(struct sk_buff 
 	unsigned char *b = skb_tail_pointer(skb);
 	struct gnet_dump d;
 
+	cond_resched();
 	nlh = NLMSG_NEW(skb, pid, seq, event, sizeof(*tcm), flags);
 	tcm = NLMSG_DATA(nlh);
 	tcm->tcm_family = AF_UNSPEC;
@@ -1061,6 +1066,7 @@ static int tc_fill_tclass(struct sk_buff
 	struct gnet_dump d;
 	struct Qdisc_class_ops *cl_ops = q->ops->cl_ops;
 
+	cond_resched();
 	nlh = NLMSG_NEW(skb, pid, seq, event, sizeof(*tcm), flags);
 	tcm = NLMSG_DATA(nlh);
 	tcm->tcm_family = AF_UNSPEC;
-- 
