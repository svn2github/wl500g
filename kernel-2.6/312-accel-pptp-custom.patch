diff -BurpN linux.orig/drivers/net/pptp.c linux/drivers/net/pptp.c
--- linux.orig/drivers/net/pptp.c	2010-08-29 07:00:41.000000000 +0000
+++ linux/drivers/net/pptp.c	2010-10-08 16:04:34.200000002 +0000
@@ -14,6 +14,7 @@
 #include <linux/module.h>
 #include <linux/kernel.h>
 #include <linux/slab.h>
+#include <linux/vmalloc.h>
 #include <linux/errno.h>
 #include <linux/netdevice.h>
 #include <linux/net.h>
@@ -43,11 +44,11 @@
 
 #include <asm/uaccess.h>
 
-#define DEBUG
-//#define CONFIG_GRE
+//#define DEBUG
+//#define CONFIG_NET_IPGRE_DEMUX
 
-#if defined(CONFIG_GRE) || defined(CONFIG_GRE_MODULE)
-#include "gre.h"
+#if defined(CONFIG_NET_IPGRE_DEMUX) || defined(CONFIG_NET_IPGRE_DEMUX_MODULE)
+#include <net/gre.h>
 #endif
 
 #define PPTP_DRIVER_VERSION "0.8.5"
@@ -669,8 +672,10 @@ static int pptp_rcv(struct sk_buff *skb)
 	if (skb->pkt_type != PACKET_HOST)
 		goto drop;
 
-	/*if (!pskb_may_pull(skb, 12))
-		goto drop;*/
+#if !defined(CONFIG_NET_IPGRE_DEMUX) && !defined(CONFIG_NET_IPGRE_DEMUX_MODULE)
+	if (!pskb_may_pull(skb, 12))
+		goto drop;
+#endif
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,22)
 	iph = ip_hdr(skb);
@@ -889,6 +889,7 @@ static int pptp_connect(struct socket *s
 	po->chan.mtu -= PPTP_HEADER_OVERHEAD;
 
 	po->chan.hdrlen = 2+sizeof(struct pptp_gre_header);
+	po->chan.hdrlen += LL_MAX_HEADER + sizeof(struct iphdr);
 	error = ppp_register_channel(&po->chan);
 	if (error) {
 		printk(KERN_ERR "PPTP: failed to register PPP channel (%d)\n", error);
@@ -1124,7 +1129,7 @@ static struct pppox_proto pppox_pptp_pro
 #endif
 };
 
-#if defined(CONFIG_GRE) || defined(CONFIG_GRE_MODULE)
+#if defined(CONFIG_NET_IPGRE_DEMUX) || defined(CONFIG_NET_IPGRE_DEMUX_MODULE)
 static struct gre_protocol gre_pptp_protocol = {
 	.handler	= pptp_rcv,
 };
@@ -1158,7 +1163,7 @@ static int __init pptp_init_module(void)
 		return -ENOMEM;
 	}
 
-#if defined(CONFIG_GRE) || defined(CONFIG_GRE_MODULE)
+#if defined(CONFIG_NET_IPGRE_DEMUX) || defined(CONFIG_NET_IPGRE_DEMUX_MODULE)
 	if (gre_add_protocol(&gre_pptp_protocol, GREPROTO_PPTP) < 0) {
 		printk(KERN_INFO "PPTP: can't add protocol\n");
 		goto out_free_mem;
@@ -1196,7 +1201,7 @@ out_unregister_sk_proto:
 	proto_unregister(&pptp_sk_proto);
 
 out_inet_del_protocol:
-#if defined(CONFIG_GRE) || defined(CONFIG_GRE_MODULE)
+#if defined(CONFIG_NET_IPGRE_DEMUX) || defined(CONFIG_NET_IPGRE_DEMUX_MODULE)
 	gre_del_protocol(&gre_pptp_protocol, GREPROTO_PPTP);
 #else
 	inet_del_protocol(&net_pptp_protocol, IPPROTO_GRE);
@@ -1212,7 +1217,7 @@ out_free_mem:
 static void __exit pptp_exit_module(void)
 {
 	unregister_pppox_proto(PX_PROTO_PPTP);
-#if defined(CONFIG_GRE) || defined(CONFIG_GRE_MODULE)
+#if defined(CONFIG_NET_IPGRE_DEMUX) || defined(CONFIG_NET_IPGRE_DEMUX_MODULE)
 	proto_unregister(&pptp_sk_proto);
 	gre_del_protocol(&gre_pptp_protocol, GREPROTO_PPTP);
 #else
diff -BurpN linux.orig/net/ipv4/gre.c linux/net/ipv4/gre.c
--- linux.orig/net/ipv4/gre.c	2010-08-21 14:27:23.000000000 +0000
+++ linux/net/ipv4/gre.c	2010-08-21 14:52:12.000000000 +0000
@@ -8,7 +8,7 @@
 #include <linux/spinlock.h>
 #include <net/protocol.h>
 
-#include "gre.h"
+#include <net/gre.h>
 
 struct gre_protocol *gre_proto[GREPROTO_MAX] ____cacheline_aligned_in_smp;
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,0)
@@ -181,7 +181,7 @@ static struct net_protocol net_gre_proto
 	.handler	= gre_rcv,
 	.err_handler	= gre_err,
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2,6,24)
-	.netns_ok=1,
+	.netns_ok	= 1,
 #endif
 };
 #endif
@@ -188,7 +188,7 @@ static struct net_protocol net_gre_proto
 
 static int __init gre_init(void)
 {
-	printk(KERN_INFO "GRE over IPv4 demultiplexor driver");
+	printk(KERN_INFO "GRE over IPv4 demultiplexor driver\n");
 
