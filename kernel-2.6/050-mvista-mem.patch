diff -uBp linuz/arch/mips/brcm-boards/bcm947xx/prom.c linux/arch/mips/brcm-boards/bcm947xx/prom.c
--- linuz/arch/mips/brcm-boards/bcm947xx/prom.c
+++ linux/arch/mips/brcm-boards/bcm947xx/prom.c
@@ -92,28 +92,40 @@ prom_init(void)
 void __init
 prom_init(void)
 {
-	unsigned long mem, extmem = 0, off, data;
+	unsigned long mem, before, offset;
+#ifdef  CONFIG_HIGHMEM
+	unsigned long extmem = 0;
+#endif
 
 	mips_machgroup = MACH_GROUP_BRCM;
 	mips_machtype = MACH_BCM947XX;
 
-	off = (unsigned long)prom_init;
-	data = *(unsigned long *)prom_init;
-
-	/* Figure out memory size by finding aliases */
-	for (mem = (1 MB); mem < (128 MB); mem <<= 1) {
-		if (*(unsigned long *)(off + mem) == data)
+	/* Figure out memory size by finding aliases.
+	 *
+	 * We assume that there will be no more than 128 MB of low memory,
+	 * and that the memory size will be a multiple of 1 MB.
+	 *
+	 * We set 'before' to be the amount of memory (in MB) before this
+	 * function, i.e. one MB less than the number  of MB of memory that we
+	 * *know* we have.  And we set 'offset' to be the address of 'prominit'
+	 * minus 'before', so that KSEG0 or KSEG1 base + offset < 4 MB.
+	 * This prevents us from overrunning 128 MB and causing a bus error.
+ 	 */
+
+	before = ((unsigned long) &prom_init) & (127 MB);
+	offset = ((unsigned long) &prom_init) - before;
+	for (mem = before + (1 MB); mem < (128 MB); mem += (1 MB)) {
+		if (*(unsigned long *)(offset + mem) ==
+		    *(unsigned long *)(prom_init)) {
+			/*
+			 * We may already be well past the end of memory at
+			 * this point, so we'll have to compensate for it.
+			 */
+			mem -= before;
 			break;
+		}
 	}
 
-#if CONFIG_RAM_SIZE
-	{
-		unsigned long config_mem;
-		config_mem = CONFIG_RAM_SIZE * 0x100000;
-		if (config_mem < mem)
-			mem = config_mem;
-	}
-#endif
 #ifdef  CONFIG_HIGHMEM
 	if (mem == 128 MB) {
 
@@ -127,10 +139,12 @@ prom_init(void)
 				 ENTRYLO(SI_SDRAM_R2 + (256 MB)),
 				 EXTVBASE, PM_256M);
 
-		off = EXTVBASE + __pa(off);
+		offset = EXTVBASE + __pa(offset);
 		for (extmem = (128 MB); extmem < (512 MB); extmem <<= 1) {
-			if (*(unsigned long *)(off + extmem) == data)
+			if (*(unsigned long *)(offset + extmem) ==
+				*(unsigned long *)(prom_init)) {
 				break;
+			}
 		}
 
 		extmem -= mem;
@@ -138,13 +152,7 @@ prom_init(void)
 		early_tlb_init();
 	}
 #endif  /* CONFIG_HIGHMEM */
-	/* Ignoring the last page when ddr size is 128M. Cached
-	 * accesses to last page is causing the processor to prefetch
-	 * using address above 128M stepping out of the ddr address
-	 * space.
-	 */
-	if (MIPS74K(current_cpu_data.processor_id) && (mem == (128 MB)))
-		mem -= 0x1000;
+
 	add_memory_region(SI_SDRAM_BASE, mem, BOOT_MEM_RAM);
 
 #ifdef  CONFIG_HIGHMEM
