 746e6ad23cd6fec2edce056e014a0eabeffa838c net core: Some interface flags not returned by SIOCGIFFLAGS
 41c31f318a5209922d051e293c61e4724daad11c networking: inappropriate ioctl operation should return ENOTTY

---
 Documentation/networking/operstates.txt |    3 ---
 net/core/dev.c                          |    6 +++---
 2 files changed, 3 insertions(+), 6 deletions(-)

diff --git a/Documentation/networking/operstates.txt b/Documentation/networking/operstates.txt
index c9074f9..1a77a3c 100644
--- a/Documentation/networking/operstates.txt
+++ b/Documentation/networking/operstates.txt
@@ -38,9 +38,6 @@ ifinfomsg::if_flags & IFF_LOWER_UP:
 ifinfomsg::if_flags & IFF_DORMANT:
  Driver has signaled netif_dormant_on()
 
-These interface flags can also be queried without netlink using the
-SIOCGIFFLAGS ioctl.
-
 TLV IFLA_OPERSTATE
 
 contains RFC2863 state of the interface in numeric representation:
diff --git a/net/core/dev.c b/net/core/dev.c
index 11560e3..a09bf65 100644
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -2711,7 +2711,7 @@ static int dev_ifsioc_locked(struct net *net, struct ifreq *ifr, unsigned int cm
 
 	switch (cmd) {
 		case SIOCGIFFLAGS:	/* Get interface flags */
-			ifr->ifr_flags = dev_get_flags(dev);
+			ifr->ifr_flags = (short) dev_get_flags(dev);
 			return 0;
 
 		case SIOCGIFMETRIC:	/* Get the metric on the interface
@@ -3041,7 +3041,7 @@ int dev_ioctl(struct net *net, unsigned int cmd, void __user *arg)
 			/* Set the per device memory buffer space.
 			 * Not applicable in our case */
 		case SIOCSIFLINK:
-			return -EINVAL;
+			return -ENOTTY;
 
 		/*
 		 *	Unknown or private ioctl.
@@ -3062,7 +3062,7 @@ int dev_ioctl(struct net *net, unsigned int cmd, void __user *arg)
 			/* Take care of Wireless Extensions */
 			if (cmd >= SIOCIWFIRST && cmd <= SIOCIWLAST)
 				return wext_handle_ioctl(&ifr, cmd, arg);
-			return -EINVAL;
+			return -ENOTTY;
 	}
 }
 
-- 
1.7.3.5
