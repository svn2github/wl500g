brcm47xx: Fix for fuse dcache bug (based on OpenWRT patch)

---
 arch/mips/mm/cache.c |    2 ++
 fs/fuse/dev.c        |   19 +++++++++++++++++++
 fs/fuse/fuse_i.h     |    4 ++++
 fs/fuse/inode.c      |    6 +++++-
 4 files changed, 30 insertions(+), 1 deletion(-)

diff -urBp a/arch/mips/mm/cache.c b/arch/mips/mm/cache.c
--- a/arch/mips/mm/cache.c
+++ b/arch/mips/mm/cache.c
@@ -35,6 +35,8 @@ void (*flush_icache_all)(void);
 
 EXPORT_SYMBOL_GPL(local_flush_data_cache_page);
 EXPORT_SYMBOL(flush_data_cache_page);
+EXPORT_SYMBOL(flush_cache_page);
+EXPORT_SYMBOL(flush_cache_all);
 
 #ifdef CONFIG_DMA_NONCOHERENT
 
diff -urBp a/fs/fuse/dev.c b/fs/fuse/dev.c
--- a/fs/fuse/dev.c	2008-02-26 02:59:40.000000000 +0300
+++ b/fs/fuse/dev.c	2011-03-14 11:31:17.000000000 +0300
@@ -16,6 +16,9 @@
 #include <linux/pagemap.h>
 #include <linux/file.h>
 #include <linux/slab.h>
+#ifdef DCACHE_BUG
+#include <asm-mips/cacheflush.h>
+#endif
 
 MODULE_ALIAS_MISCDEV(FUSE_MINOR);
 
@@ -482,6 +485,9 @@ static int fuse_copy_fill(struct fuse_co
 {
 	unsigned long offset;
 	int err;
+#ifdef DCACHE_BUG
+	struct vm_area_struct *vma;
+#endif
 
 	unlock_request(cs->fc, cs->req);
 	fuse_copy_finish(cs);
@@ -493,14 +499,22 @@ static int fuse_copy_fill(struct fuse_co
 		cs->nr_segs --;
 	}
 	down_read(&current->mm->mmap_sem);
+#ifdef DCACHE_BUG
+	err = get_user_pages(current, current->mm, cs->addr, 1, cs->write, 0,
+			     &cs->pg, &vma);
+#else
 	err = get_user_pages(current, current->mm, cs->addr, 1, cs->write, 0,
 			     &cs->pg, NULL);
+#endif
 	up_read(&current->mm->mmap_sem);
 	if (err < 0)
 		return err;
 	BUG_ON(err != 1);
 	offset = cs->addr % PAGE_SIZE;
 	cs->mapaddr = kmap_atomic(cs->pg, KM_USER0);
+#ifdef DCACHE_BUG
+	flush_cache_page(vma, cs->addr, page_to_pfn(cs->pg));
+#endif
 	cs->buf = cs->mapaddr + offset;
 	cs->len = min(PAGE_SIZE - offset, cs->seglen);
 	cs->seglen -= cs->len;
@@ -513,6 +527,11 @@ static int fuse_copy_fill(struct fuse_co
 static int fuse_copy_do(struct fuse_copy_state *cs, void **val, unsigned *size)
 {
 	unsigned ncpy = min(*size, cs->len);
+#ifdef DCACHE_BUG
+	// patch from mailing list, it is very important, otherwise,
+	// can't mount, or ls mount point will hang
+	flush_cache_all();
+#endif
 	if (val) {
 		if (cs->write)
 			memcpy(cs->buf, *val, ncpy);
diff -urBp a/fs/fuse/fuse_i.h b/fs/fuse/fuse_i.h
--- a/fs/fuse/fuse_i.h	2008-02-26 02:59:40.000000000 +0300
+++ b/fs/fuse/fuse_i.h	2011-03-14 11:17:16.000000000 +0300
@@ -16,6 +16,10 @@
 #include <linux/backing-dev.h>
 #include <linux/mutex.h>
 
+#if defined(__mips__) && defined(CONFIG_BCM47XX) && !defined(CONFIG_CPU_MIPSR2)
+#define DCACHE_BUG
+#endif
+
 /** Max number of pages that can be used in a single read request */
 #define FUSE_MAX_PAGES_PER_REQ 32
 
diff -urBp a/fs/fuse/inode.c b/fs/fuse/inode.c
--- a/fs/fuse/inode.c	2008-02-26 02:59:40.000000000 +0300
+++ b/fs/fuse/inode.c	2011-03-14 11:37:14.000000000 +0300
@@ -760,7 +760,11 @@ static int __init fuse_init(void)
 {
 	int res;
 
-	printk("fuse init (API version %i.%i)\n",
+	printk("fuse init (API version %i.%i)"
+#ifdef DCACHE_BUG
+		" DCACHE_BUG enabled"
+#endif
+		"\n",
 	       FUSE_KERNEL_VERSION, FUSE_KERNEL_MINOR_VERSION);
 
 	INIT_LIST_HEAD(&fuse_conn_list);
-- 
