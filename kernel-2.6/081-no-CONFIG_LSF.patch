From b3a6ffe16b5cc48abe7db8d04882dc45280eb693
From: Jens Axboe
Date: Fri, 12 Dec 2008 09:51:16 +0100
Subject: [PATCH] Get rid of CONFIG_LSF

We have two seperate config entries for large devices/files. One
is CONFIG_LBD that guards just the devices, the other is CONFIG_LSF
that handles large files. This doesn't make a lot of sense, you typically
want both or none. So get rid of CONFIG_LSF and change CONFIG_LBD wording
to indicate that it covers both.

Acked-by: Jean Delvare <khali@linux-fr.org>
Signed-off-by: Jens Axboe <jens.axboe@oracle.com>

---
 block/Kconfig         |   24 +++++++++++-------------
 include/linux/types.h |   11 +++--------
 2 files changed, 14 insertions(+), 21 deletions(-)

diff --git a/block/Kconfig b/block/Kconfig
--- a/block/Kconfig
+++ b/block/Kconfig
@@ -20,12 +20,19 @@
 if BLOCK
 
 config LBD
-	bool "Support for Large Block Devices"
+	bool "Support for large block devices and files"
 	depends on !64BIT
 	help
-	  Say Y here if you want to attach large (bigger than 2TB) discs to
-	  your machine, or if you want to have a raid or loopback device
-	  bigger than 2TB.  Otherwise say N.
+	  Enable block devices or files of size 2TB and larger.
+
+ 	  This option is required to support the full capacity of large
+ 	  (2TB+) block devices, including RAID, disk, Network Block Device,
+ 	  Logical Volume Manager (LVM) and loopback.
+
+	  This option also enables support for single files larger than
+	  2TB.
+
+	  If unsure, say N.
 
 config BLK_DEV_IO_TRACE
 	bool "Support for tracing block io actions"
@@ -40,15 +47,6 @@
 
 	  git://brick.kernel.dk/data/git/blktrace.git
 
-config LSF
-	bool "Support for Large Single Files"
-	depends on !64BIT
-	help
-	  Say Y here if you want to be able to handle very large files (bigger
-	  than 2TB), otherwise say N.
-
-	  If unsure, say Y.
-
 endif
 
 source block/Kconfig.iosched
diff --git a/include/linux/types.h b/include/linux/types.h
--- a/include/linux/types.h
+++ b/include/linux/types.h
@@ -135,19 +135,14 @@ typedef		__s64		int64_t;
  *
  * Linux always considers sectors to be 512 bytes long independently
  * of the devices real block size.
+ *
+ * blkcnt_t is the type of the inode's block count.
  */
 #ifdef CONFIG_LBD
 typedef u64 sector_t;
-#else
-typedef unsigned long sector_t;
-#endif
-
-/*
- * The type of the inode's block count.
- */
-#ifdef CONFIG_LSF
 typedef u64 blkcnt_t;
 #else
+typedef unsigned long sector_t;
 typedef unsigned long blkcnt_t;
 #endif
 
-- 
1.7.6.2
