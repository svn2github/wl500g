From 58b9e2239fa63c7c470acb4a77e9da17e6a6fa4f
From: David Daney
Date: Thu, 18 Feb 2010 16:13:03 -0800
Subject: [PATCH] MIPS: Add SYSCALL to uasm.

Signed-off-by: David Daney <ddaney@caviumnetworks.com>
To: linux-mips@linux-mips.org
Patchwork: http://patchwork.linux-mips.org/patch/976/
Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
---

diff --git a/arch/mips/mm/tlbex.c b/arch/mips/mm/tlbex.c
--- a/arch/mips/mm/tlbex.c
+++ b/arch/mips/mm/tlbex.c
@@ -90,7 +90,8 @@ enum fields
 	BIMM = 0x040,
 	JIMM = 0x080,
 	FUNC = 0x100,
-	SET = 0x200
+	SET = 0x200,
+	SCIMM = 0x400
 };
 
 #define OP_MASK		0x2f
@@ -111,6 +112,8 @@ enum fields
 #define FUNC_SH		0
 #define SET_MASK	0x7
 #define SET_SH		0
+#define SCIMM_MASK	0xfffff
+#define SCIMM_SH	6
 
 enum opcode {
 	insn_invalid,
@@ -122,7 +125,8 @@ enum opcode {
 	insn_ll, insn_lld, insn_lui, insn_lw, insn_mfc0, insn_mtc0,
 	insn_or, insn_ori, insn_rfe, insn_sc, insn_scd, insn_sd, insn_sll,
 	insn_sra, insn_srl, insn_subu, insn_sw, insn_tlbp, insn_tlbwi,
-	insn_tlbwr, insn_xor, insn_xori
+	insn_tlbwr, insn_xor, insn_xori,
+	insn_syscall
 };
 
 struct insn {
@@ -189,6 +193,7 @@ static __cpuinitdata struct insn insn_ta
 	{ insn_tlbwr, M(cop0_op,cop_op,0,0,0,tlbwr_op), 0 },
 	{ insn_xor, M(spec_op,0,0,0,0,xor_op), RS | RT | RD },
 	{ insn_xori, M(xori_op,0,0,0,0,0), RS | RT | UIMM },
+	{ insn_syscall, M(spec_op, 0, 0, 0, 0, syscall_op), SCIMM},
 	{ insn_invalid, 0, 0 }
 };
 
@@ -261,6 +266,14 @@ static __cpuinit u32 build_jimm(u32 arg)
 	return (arg >> 2) & JIMM_MASK;
 }
 
+static inline __cpuinit u32 build_scimm(u32 arg)
+{
+	if (arg & ~SCIMM_MASK)
+		printk(KERN_WARNING "Micro-assembler field overflow\n");
+
+	return (arg & SCIMM_MASK) << SCIMM_SH;
+}
+
 static __cpuinit u32 build_func(u32 arg)
 {
 	if (arg & ~FUNC_MASK)
@@ -309,6 +322,7 @@ static void __cpuinit build_insn(u32 **b
 	if (ip->fields & JIMM) op |= build_jimm(va_arg(ap, u32));
 	if (ip->fields & FUNC) op |= build_func(va_arg(ap, u32));
 	if (ip->fields & SET) op |= build_set(va_arg(ap, u32));
+	if (ip->fields & SCIMM) op |= build_scimm(va_arg(ap, u32));
 	va_end(ap);
 
 	**buf = op;
@@ -431,6 +445,7 @@ I_0(_tlbwi);
 I_0(_tlbwr);
 I_u3u1u2(_xor)
 I_u2u1u3(_xori);
+I_u1(_syscall);
 
 /*
  * handling labels
-- 
1.7.1.1
