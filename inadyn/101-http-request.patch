diff -BurpN inadyn.orig/include/dyndns.h inadyn/include/dyndns.h
--- inadyn.orig/include/dyndns.h	2010-07-10 23:31:21.000000000 +0000
+++ inadyn/include/dyndns.h	2010-07-11 09:53:30.000000000 +0000
@@ -86,28 +86,27 @@ typedef enum
 
 /* Conversation with the IP server */
 #define DYNDNS_GET_MY_IP_HTTP_REQUEST  \
-	"GET http://%s:%d%s HTTP/1.0\r\n\r\n"
+	"GET http://%s%s HTTP/1.0\r\n\r\n"
 
 /* dyndns.org specific update address format */
 /* 3322.org has the same parameters ...*/
 #define DYNDNS_GET_MY_IP_HTTP_REQUEST_FORMAT \
-	"GET http://%s:%d%s" \
-		"system=%s&" \
-		"hostname=%s&" \
-		"myip=%s&" \
-		"wildcard=%s&" \
-		"mx=%s&" \
-		"backmx=NO&" \
-		"offline=NO " \
-		"HTTP/1.0\r\n" \
-		"Host: %s\r\n" \
-		"Authorization: Basic %s\r\n" \
-		"User-Agent: "DYNDNS_AGENT_NAME " " DYNDNS_EMAIL_ADDR"\r\n\r\n"
+    "GET %s" \
+	"system=%s&" \
+	"hostname=%s&" \
+	"myip=%s&" \
+	"wildcard=%s&" \
+	"mx=%s&" \
+	"backmx=NO&" \
+	"offline=NO " \
+	 "HTTP/1.0\r\n" \
+	"Host: %s\r\n" \
+	"Authorization: Basic %s\r\n" \
+	"User-Agent: "DYNDNS_AGENT_NAME " " DYNDNS_EMAIL_ADDR"\r\n\r\n"
     
 /*freedns.afraid.org specific update request format */    
 #define FREEDNS_UPDATE_MY_IP_REQUEST_FORMAT \
-    "GET http://%s:%d%s" \
-    "%s " \
+    "GET %s%s " \
 	 "HTTP/1.0\r\n" \
 	"Host: %s\r\n" \
 	"User-Agent: "DYNDNS_AGENT_NAME " " DYNDNS_EMAIL_ADDR"\r\n\r\n"
@@ -120,14 +119,14 @@ typedef enum
 	The parameter here is the entire request but NOT including the alias.
 */
 #define GENERIC_DNS_BASIC_AUTH_MY_IP_REQUEST_FORMAT \
-    "GET http://%s:%d%s%s " \
+    "GET %s%s " \
 	 "HTTP/1.0\r\n" \
 	"Authorization: Basic %s\r\n" \
 	"Host: %s\r\n" \
 	"User-Agent: "DYNDNS_AGENT_NAME " " DYNDNS_EMAIL_ADDR"\r\n\r\n"
 
 #define GENERIC_NOIP_AUTH_MY_IP_REQUEST_FORMAT \
-    "GET http://%s:%d%s%s&myip=%s " \
+    "GET %s%s&myip=%s " \
 	 "HTTP/1.0\r\n" \
 	"Authorization: Basic %s\r\n" \
 	"Host: %s\r\n" \
@@ -136,9 +135,9 @@ typedef enum
 /** dont ask me why easydns is so picky
 */
 #define GENERIC_EASYDNS_AUTH_MY_IP_REQUEST_FORMAT \
-    "GET http://%s:%d%s%s&" \
-		"myip=%s&" \
-		"wildcard=%s "\
+    "GET %s%s&" \
+	"myip=%s&" \
+	"wildcard=%s "\
 	 "HTTP/1.0\r\n" \
 	"Authorization: Basic %s\r\n" \
 	"Host: %s\r\n" \
diff -BurpN inadyn.orig/src/dyndns.c inadyn/src/dyndns.c
--- inadyn.orig/src/dyndns.c	2010-07-10 23:31:21.000000000 +0000
+++ inadyn/src/dyndns.c	2010-07-11 09:53:54.000000000 +0000
@@ -180,8 +180,6 @@ static int get_req_for_dyndns_server(DYN
     DYNDNS_ORG_SPECIFIC_DATA *p_dyndns_specific = 
 		(DYNDNS_ORG_SPECIFIC_DATA*) p_sys_info->p_specific_data;
 	return sprintf(p_self->p_req_buffer, DYNDNS_GET_MY_IP_HTTP_REQUEST_FORMAT,
-		p_self->info[infcnt].dyndns_server_name.name,
-		p_self->info[infcnt].dyndns_server_name.port,
 		p_self->info[infcnt].dyndns_server_url,
 		p_dyndns_specific->p_system,
 		p_self->info[infcnt].alias_info[alcnt].names.name,
@@ -197,8 +195,6 @@ static int get_req_for_freedns_server(DY
 {
 	(void)p_sys_info;
 	return sprintf(p_self->p_req_buffer, FREEDNS_UPDATE_MY_IP_REQUEST_FORMAT,
-		p_self->info[infcnt].dyndns_server_name.name,
-		p_self->info[infcnt].dyndns_server_name.port,
 		p_self->info[infcnt].dyndns_server_url,
 		p_self->info[infcnt].alias_info[alcnt].hashes.str,
 		p_self->info[infcnt].dyndns_server_name.name);
@@ -209,8 +205,6 @@ static int get_req_for_generic_http_dns_
 {
 	(void)p_sys_info;
 	return sprintf(p_self->p_req_buffer, GENERIC_DNS_BASIC_AUTH_MY_IP_REQUEST_FORMAT,
-		p_self->info[infcnt].dyndns_server_name.name,
-		p_self->info[infcnt].dyndns_server_name.port,
 		p_self->info[infcnt].dyndns_server_url,
 		p_self->info[infcnt].alias_info[alcnt].names.name,
 		p_self->info[infcnt].credentials.p_enc_usr_passwd_buffer,
@@ -220,8 +214,6 @@ static int get_req_for_noip_http_dns_ser
 {
 	(void)p_sys_info;
 	return sprintf(p_self->p_req_buffer, GENERIC_NOIP_AUTH_MY_IP_REQUEST_FORMAT,
-		p_self->info[infcnt].dyndns_server_name.name,
-		p_self->info[infcnt].dyndns_server_name.port,
 		p_self->info[infcnt].dyndns_server_url,
 		p_self->info[infcnt].alias_info[alcnt].names.name,
 		p_self->info[infcnt].my_ip_address.name,
@@ -233,9 +225,7 @@ static int get_req_for_easydns_http_dns_
 {
 	(void)p_sys_info;
 	return sprintf(p_self->p_req_buffer, GENERIC_EASYDNS_AUTH_MY_IP_REQUEST_FORMAT,
-		p_self->info[infcnt].dyndns_server_name.name,
-		p_self->info[infcnt].dyndns_server_name.port,
-		p_self->info[infcnt].dyndns_server_url,		
+		p_self->info[infcnt].dyndns_server_url,
 		p_self->info[infcnt].alias_info[alcnt].names.name,
 		p_self->info[infcnt].my_ip_address.name,
 		p_self->wildcard ? "ON" : "OFF",
@@ -247,7 +237,7 @@ static int get_req_for_easydns_http_dns_
 static int get_req_for_ip_server(DYN_DNS_CLIENT *p_self, int infcnt, void *p_specific_data)
 {
     return sprintf(p_self->p_req_buffer, DYNDNS_GET_MY_IP_HTTP_REQUEST,
-        p_self->info[infcnt].ip_server_name.name, p_self->info[infcnt].ip_server_name.port, p_self->info[infcnt].ip_server_url);
+        p_self->info[infcnt].ip_server_name.name, p_self->info[infcnt].ip_server_url);
 }
 
 /* 
@@ -442,7 +432,7 @@ static BOOL is_generic_server_rsp_ok( DY
 		CODE=200
 		CODE=707, for duplicated updates
 */
-BOOL is_zoneedit_server_rsp_ok( DYN_DNS_CLIENT *p_self, char*p_rsp, int infnr, char* p_ok_string)
+static BOOL is_zoneedit_server_rsp_ok( DYN_DNS_CLIENT *p_self, char*p_rsp, int infnr, char* p_ok_string)
 {
 	return 
 	(		
@@ -454,7 +444,7 @@ BOOL is_zoneedit_server_rsp_ok( DYN_DNS_
 /**
 	NOERROR is the OK code here
 */
-BOOL is_easydns_server_rsp_ok( DYN_DNS_CLIENT *p_self, char*p_rsp, int infnr, char* p_ok_string)
+static BOOL is_easydns_server_rsp_ok( DYN_DNS_CLIENT *p_self, char*p_rsp, int infnr, char* p_ok_string)
 {
 	return (strstr(p_rsp, "NOERROR") != NULL);
 }
