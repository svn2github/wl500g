#!/bin/sh
# Universal 3G/CDMA moden connection script
#   from: sorine, rss, dlukanidin at wl500g.info

apn=$(nvram get wan_modem_apn)
dialnumber=$(nvram get wan_modem_dialno)
modem=$(nvram get wan_modem_type) #1 - gprs/edge/umts/hsdpa, 0 - cdma/evdo
username=$(nvram get wan_modem_username)
port=$(nvram get wan_modem_tts_port)
portspeed=$(nvram get wan_modem_portspeed)
password=$(nvram get wan_modem_passwd)
mtu=$(nvram get wan_modem_mtu)
mru=$(nvram get wan_modem_mru)
vend=$(nvram get wan_modem_vid)
prod=$(nvram get wan_modem_pid)
pppdoptions=$(nvram get wan_modem_options)
initoptions=$(nvram get wan_modem_dialup_init)
demand=$(nvram get wan_modem_demand)
idle=$(nvram get wan_modem_idle)
maxfail=$(nvram get wan_modem_maxfail)
hot_restart=$(nvram get wan_modem_hot_restart)
serial_enable=$(nvram get wan_modem_serial_enable)
usbloc=$(nvram get wan_modem_usbloc)
if [ "$hot_restart" == "" ]; then hot_restart="0"; fi
POST_FN=$(nvram get wan_modem_onfailure) 
[ -z "$POST_FN" ] && POST_FN="/usr/local/sbin/post-3g-failure";
usbdev=""
#ifnum=$1
[ -z "$ifnum" ] && ifnum=0;

kernel="$(uname -r)"
kernel=${kernel:0:3}
echo $kernel

if [ "$kernel" = "2.4" ]; then
    tts_port="/dev/usb/tts/"
    acm_port="/dev/usb/acm/"
    acm_mod="acm"
else
    tts_port="/dev/ttyUSB"
    acm_port="/dev/ttyACM"
    acm_mod="cdc-acm"
fi

nvram set wan_modem_need_chat=1
#nvram set wan_modem_packetsize=4096
#mkdir /tmp/ppp/peers/

echo "ABORT	'~'
ABORT	'BUSY'
ABORT 	'NO CARRIER'
ABORT	'ERROR'
ABORT 	'NO DIAL TONE'
ABORT 	'NO ANSWER'
ABORT 	'DELAYED'
REPORT	'CONNECT'
''	'ATZ'
SAY	'Calling CDMA/EVDO'
'OK'	'$initoptions'
''	'ATDT#777'
'CONNECT'	'ATO'
'' ''" > /tmp/ppp/peers/0.chat

echo "ABORT	'~'
ABORT	BUSY
ABORT	'NO CARRIER'
ABORT	ERROR
REPORT	CONNECT
''	'ATZ'
SAY	'Calling UMTS/GPRS'
'OK'	'$initoptions'
''	'AT+CGDCONT=1,\"IP\",\"$apn\"'
'OK'	'ATD$dialnumber'
'CONNECT'a	''" > /tmp/ppp/peers/1.chat

write_dialup_file()
{
    [ -z "$usbdev" ] || return;

    if [ -n "$usbloc" ]; then
	usbdev=$(grep ": $usbloc :" /proc/bus/usb/devpath | awk -F':' '{print $1}')
    fi
    if [ -z "$usbdev" ]; then
        if [ ! -c ${acm_port}$port ]; then
	    usbdev="${tts_port}$port"
	else
	    usbdev="${acm_port}$port"
	fi
    fi

echo "debug
    $usbdev
    $portspeed
    crtscts
    noipdefault
    ipcp-accept-local
    lcp-echo-interval 60
    lcp-echo-failure 6
    mtu $mtu
    mru $mru
    usepeerdns
    noauth
    holdoff 5
    maxfail $maxfail
    nodetach
    persist
    unit $ifnum
    novj nobsdcomp novjccomp nopcomp noaccomp" > /tmp/ppp/peers/dialup

    [ -z "$username" ] || echo "user '$username'" >> /tmp/ppp/peers/dialup;
    [ -z "$password" ] || echo "password '$password'" >> /tmp/ppp/peers/dialup;

    if [ -z "$demand" ]; then demand="0"; fi
    if [ "$demand" != "0" ]; then
	if [ -z "$idle" ]; then idle="600"; fi
	echo "demand idle $idle" >> /tmp/ppp/peers/dialup
    fi
    if [ ! -z "$pppdoptions" ]; then
	echo "$pppdoptions" >> /tmp/ppp/peers/dialup
    fi
    echo "connect \"/tmp/ppp/peers/chat.sh\"" >> /tmp/ppp/peers/dialup
}

echo -e "#!/bin/sh
    if [ \$(nvram get wan_modem_need_chat) == 1 ]; then
	chat  -s -S -V -t 10 -f /tmp/ppp/peers/$modem.chat 2>>/tmp/chat.log
	res=\$?
    else
	echo \"<<< chat.sh >>> Modem session may be up, try to reconnect\" >>/tmp/chat.log
       nvram set wan_modem_need_chat=1
	return 0;
    fi
    if [ \$res = 4 ]; then
	echo \"<<< chat.sh >>> Modem session is up, force reconnect\" >>/tmp/chat.log
	return 0;
    fi
    return \$res" > /tmp/ppp/peers/chat.sh
    chmod +x /tmp/ppp/peers/chat.sh

if [ "$hot_restart" = "1" ]; then
  if [ ! -e /tmp/ppp/peers/ip-up ] ; then
    mv /tmp/ppp/ip-up /tmp/ppp/peers/ip-up
    echo -e "#!/bin/sh
    nvram set wan_modem_need_chat=0
    echo \"<<< /tmp/ppp/ip-up >>> Session is up, next try to reconnect\" >>/tmp/chat.log
    /tmp/ppp/peers/ip-up \$@" > /tmp/ppp/ip-up
    chmod +x /tmp/ppp/ip-up
  fi
fi

echo -e "#!/bin/sh
    pingaddr=\"8.8.8.8\"
    for i in 1 2 3 4; do
	usleep 500000
	ping -I ppp$ifnum -c 1 \$pingaddr >> /tmp/chat.log
	usleep 500000
    done" > /tmp/ppp/peers/ping$ifnum.sh
chmod +x /tmp/ppp/peers/ping$ifnum.sh

load_drivers()
{
maxpacket=$(nvram get wan_modem_packetsize)
maxpacket=${maxpacket:-0}
if [ $maxpacket -gt 128 ]; then
 maxpacket="maxSize=${maxpacket}"
else
 maxpacket=
fi

if [ "$(lsmod | grep $acm_mod)" = "" ]; then
    if [ "$kernel" = "2.4" ]; then
	insmod $acm_mod $maxpacket
    else
	insmod $acm_mod
    fi
fi
if [ "$(lsmod | grep usbserial)" = "" ]; then
    if [ "$(nvram get wan_modem_vid)" = "" -o "$(nvram get wan_modem_pid)" = "" ]; then
	insmod usbserial
	insmod option
    else
	insmod usbserial vendor=$(nvram get wan_modem_vid) product=$(nvram get wan_modem_pid) $maxpacket
    fi
    if [ "$serial_enable" = "1" ]; then
	insmod pl2303
	insmod ftdi_sio
    fi
fi
}

load_drivers
sleep 1
write_dialup_file

while true; do
    sleep 1
    if [ "$demand" != "0" ]; then
	killall ping$ifnum.sh
	/tmp/ppp/peers/ping$ifnum.sh &
    fi

    pppd call dialup >> /tmp/chat.log 2>&1
    res=$?
    echo "pppd exit code: $res
	Reconnect. Device: $usbdev" >> /tmp/chat.log
    logger "pppd exit code: $res"
    sleep 1
    if [ -e $POST_FN ]; then
        $POST_FN $ifnum $usbdev $res
    fi
done
