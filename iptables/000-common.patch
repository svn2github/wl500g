diff -Bur iptables-1.3.8/extensions/libipt_quota.c iptables/extensions/libipt_quota.c
--- iptables-1.3.8/extensions/libipt_quota.c	2007-01-23 15:50:00.000000000 +0300
+++ iptables/extensions/libipt_quota.c	2007-12-27 16:18:05.000000000 +0300
@@ -9,7 +9,7 @@
 #include <getopt.h>
 #include <iptables.h>
 
-#include <linux/netfilter/xt_quota.h>
+#include <linux/netfilter_ipv4/ipt_quota.h>
 #include <linux/netfilter_ipv4/ip_tables.h>
 
 static struct option opts[] = {
@@ -29,7 +29,7 @@
 static void
 print(const struct ipt_ip *ip, const struct ipt_entry_match *match, int numeric)
 {
-        struct xt_quota_info *q = (struct xt_quota_info *) match->data;
+        struct ipt_quota_info *q = (struct ipt_quota_info *) match->data;
         printf("quota: %llu bytes", (unsigned long long) q->quota);
 }
 
@@ -37,7 +37,7 @@
 static void
 save(const struct ipt_ip *ip, const struct ipt_entry_match *match)
 {
-        struct xt_quota_info *q = (struct xt_quota_info *) match->data;
+        struct ipt_quota_info *q = (struct ipt_quota_info *) match->data;
         printf("--quota %llu ", (unsigned long long) q->quota);
 }
 
@@ -63,7 +63,7 @@
       const struct ipt_entry *entry,
       unsigned int *nfcache, struct ipt_entry_match **match)
 {
-        struct xt_quota_info *info = (struct xt_quota_info *) (*match)->data;
+        struct ipt_quota_info *info = (struct ipt_quota_info *) (*match)->data;
 
         switch (c) {
         case '1':
@@ -90,8 +90,8 @@
 	.next		= NULL,
 	.name		= "quota",
 	.version	= IPTABLES_VERSION,
-	.size		= IPT_ALIGN(sizeof (struct xt_quota_info)),
-	.userspacesize	= offsetof(struct xt_quota_info, quota),
+	.size		= IPT_ALIGN(sizeof (struct ipt_quota_info)),
+	.userspacesize	= offsetof(struct ipt_quota_info, quota),
 	.help		= &help,
 	.parse		= &parse,
 	.final_check	= &final_check,
diff -urbB iptables-1.3.8/extensions/libipt_set.h iptables/extensions/libipt_set.h
--- iptables-1.3.8/extensions/libipt_set.h	2007-01-23 15:50:00.000000000 +0300
+++ iptables/extensions/libipt_set.h	2008-12-19 12:15:51.000000000 +0300
@@ -66,7 +66,7 @@
 	if (size != sizeof(struct ip_set_req_get_set))
 		exit_error(OTHER_PROBLEM,
 			   "Incorrect return size from kernel during ipset lookup, "
-			   "(want %ld, got %ld)\n",
+			   "(want %d, got %d)\n",
 			   sizeof(struct ip_set_req_get_set), size);
 	if (req.set.index == IP_SET_INVALID_ID)
 		exit_error(PARAMETER_PROBLEM,
@@ -92,7 +92,7 @@
 	if (size != sizeof(struct ip_set_req_get_set))
 		exit_error(OTHER_PROBLEM,
 			   "Incorrect return size from kernel during ipset lookup, "
-			   "(want %ld, got %ld)\n",
+			   "(want %d, got %d)\n",
 			   sizeof(struct ip_set_req_get_set), size);
 	if (req.set.name[0] == '\0')
 		exit_error(PARAMETER_PROBLEM,
