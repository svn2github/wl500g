diff -BurpN iptables-1.3.8/extensions/.webstr-test iptables/extensions/.webstr-test
--- iptables-1.3.8/extensions/.webstr-test	1970-01-01 00:00:00.000000000 +0000
+++ iptables/extensions/.webstr-test	2009-09-19 08:13:04.000000000 +0000
@@ -0,0 +1,2 @@
+#! /bin/sh
+[ -f $KERNEL_DIR/include/linux/netfilter_ipv4/ipt_webstr.h ] && echo webstr
diff -BurpN iptables-1.3.8/extensions/libipt_webstr.c iptables/extensions/libipt_webstr.c
--- iptables-1.3.8/extensions/libipt_webstr.c	1970-01-01 00:00:00.000000000 +0000
+++ iptables/extensions/libipt_webstr.c	2009-09-26 10:29:10.000000000 +0000
@@ -0,0 +1,187 @@
+/* Shared library add-on to iptables to add string matching support..
+ *.
+ * Copyright (C) 2000 Emmanuel Roger  <winfield@freegates.be>
+ *
+ * ChangeLog
+ *     27.01.2001: Gianni Tedesco <gianni@ecsc.co.uk>
+ *             Changed --tos to --string in save(). Also
+ *             updated to work with slightly modified
+ *             ipt_string_info.
+ */
+
+/* Shared library add-on to iptables to add webstr matching support. 
+ *
+ * Copyright (C) 2003, CyberTAN Corporation
+ * All Rights Reserved.
+ *
+ * Description:
+ *   This is shared library, added to iptables, for web content inspection. 
+ *   It was derived from 'string' matching support, declared as above.
+ *
+ * ChangeLog
+ *	2009-09-26: Leonid Lisovskiy <lly.dev@gmail.com>
+ *			Fix save() method, minor parse() optimization.
+ */
+
+
+#include <stdio.h>
+#include <netdb.h>
+#include <string.h>
+#include <stdlib.h>
+#include <getopt.h>
+
+#include <iptables.h>
+#include <linux/netfilter_ipv4/ipt_webstr.h>
+
+/* Function which prints out usage message. */
+static void
+help(void)
+{
+	printf(
+"WEBSTR match v%s options:\n"
+"--host [!] host               Match a http string in a packet\n"
+"--url [!] url                 Match a http string in a packet\n"
+"--content [!] content         Match a http string in a packet\n"
+"\n",
+IPTABLES_VERSION);
+}
+
+static struct option opts[] = {
+	{ "host",    1, 0, '1' },
+	{ "url",     1, 0, '2' },
+	{ "content", 1, 0, '3' },
+	{0}
+};
+
+/* Initialize the match. */
+static void
+init(struct ipt_entry_match *m, unsigned int *nfcache)
+{
+	*nfcache |= NFC_UNKNOWN;
+}
+
+static void
+parse_string(const unsigned char *s, struct ipt_webstr_info *info)
+{	
+        if (strlen(s) <= BM_MAX_NLEN) strcpy(info->string, s);
+	else exit_error(PARAMETER_PROBLEM, "WEBSTR too long `%s'", s);
+}
+
+/* Function which parses command options; returns true if it
+   ate an option */
+static int
+parse(int c, char **argv, int invert, unsigned int *flags,
+      const struct ipt_entry *entry,
+      unsigned int *nfcache,
+      struct ipt_entry_match **match)
+{
+	struct ipt_webstr_info *stringinfo = (struct ipt_webstr_info *)(*match)->data;
+
+	switch (c) {
+	case '1':
+                stringinfo->type = IPT_WEBSTR_HOST;
+		break;
+
+	case '2':
+                stringinfo->type = IPT_WEBSTR_URL;
+		break;
+
+	case '3':
+                stringinfo->type = IPT_WEBSTR_CONTENT;
+		break;
+
+	default:
+		return 0;
+	}
+	check_inverse(optarg, &invert, &optind, 0);
+	if (invert)
+		stringinfo->invert = 1;
+	parse_string(argv[optind-1], stringinfo);
+        stringinfo->len=strlen((char *)&stringinfo->string);
+
+	*flags = 1;
+	return 1;
+}
+
+static void
+print_string(char string[], int invert, int numeric)
+{
+	if (invert)
+		fputc('!', stdout);
+	printf("%s ",string);
+}
+
+/* Final check; must have specified --string. */
+static void
+final_check(unsigned int flags)
+{
+	if (!flags)
+		exit_error(PARAMETER_PROBLEM,
+			   "WEBSTR match: You must specify `--webstr'");
+}
+
+static void
+print_type(unsigned type)
+{
+	switch (type) {
+	case IPT_WEBSTR_HOST:
+		printf("%s ", opts[0].name);
+		break;
+
+	case IPT_WEBSTR_URL:
+		printf("%s ", opts[1].name);
+		break;
+
+	case IPT_WEBSTR_CONTENT:
+		printf("%s ", opts[2].name);
+		break;
+
+	default:
+		printf("ERROR ");
+		break;
+	}
+
+}
+
+/* Prints out the matchinfo. */
+static void
+print(const struct ipt_ip *ip,
+      const struct ipt_entry_match *match,
+      int numeric)
+{
+	struct ipt_webstr_info *stringinfo = (struct ipt_webstr_info *)match->data;
+
+	printf("webstr: ");
+	print_type(stringinfo->type);
+	print_string(stringinfo->string, stringinfo->invert, numeric);
+}
+
+/* Saves the union ipt_matchinfo in parsable form to stdout. */
+static void
+save(const struct ipt_ip *ip, const struct ipt_entry_match *match)
+{
+	struct ipt_webstr_info *stringinfo = (struct ipt_webstr_info *)match->data;
+
+	printf("--"); print_type(stringinfo->type);
+	print_string(stringinfo->string, stringinfo->invert, 0);
+}
+
+static struct iptables_match webstr = { 
+	.next		= NULL,
+	.name		= "webstr",
+	.version	= IPTABLES_VERSION,
+	.size		= IPT_ALIGN(sizeof(struct ipt_webstr_info)),
+	.userspacesize	= IPT_ALIGN(sizeof(struct ipt_webstr_info)),
+	.help		= &help,
+	.init		= &init,
+	.parse		= &parse,
+	.final_check	= &final_check,
+	.print		= &print,
+	.save		= &save,
+	.extra_opts	= opts
+};
+
+void _init(void)
+{
+	register_match(&webstr);
+}
