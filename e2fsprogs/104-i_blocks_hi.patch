i_blocks_hi fixes

 47e155df575be3664493903507ac40d56c9b4e7d libext2fs: Fix ext2fs_iblk_{add,sub}_blocks() when the i_blocks_hi is non-zero
 b70506bffba208daa2dc176be9370bc198ecd221 e2fsck: Set i_blocks_hi when correcting the i_blocks field in pass #1

---
 e2fsck/pass1.c       |    2 +-
 lib/ext2fs/i_block.c |   17 +++++++++--------
 2 files changed, 10 insertions(+), 9 deletions(-)

diff --git a/lib/ext2fs/i_block.c b/lib/ext2fs/i_block.c
--- a/lib/ext2fs/i_block.c
+++ b/lib/ext2fs/i_block.c
@@ -31,6 +31,9 @@ errcode_t ext2fs_iblk_add_blocks(ext2_filsys fs, struct ext2_inode *inode,
 {
 	unsigned long long b = inode->i_blocks;
 
+	if (fs->super->s_feature_ro_compat & EXT4_FEATURE_RO_COMPAT_HUGE_FILE)
+		b += ((long long) inode->osd2.linux2.l_i_blocks_hi) << 32;
+
 	if (!(fs->super->s_feature_ro_compat &
 	      EXT4_FEATURE_RO_COMPAT_HUGE_FILE) ||
 	    !(inode->i_flags & EXT4_HUGE_FILE_FL))
@@ -38,11 +41,9 @@ errcode_t ext2fs_iblk_add_blocks(ext2_filsys fs, struct ext2_inode *inode,
 
 	b += num_blocks;
 
-	if (fs->super->s_feature_ro_compat &
-	    EXT4_FEATURE_RO_COMPAT_HUGE_FILE) {
-		b += ((long long) inode->osd2.linux2.l_i_blocks_hi) << 32;
+	if (fs->super->s_feature_ro_compat & EXT4_FEATURE_RO_COMPAT_HUGE_FILE)
 		inode->osd2.linux2.l_i_blocks_hi = b >> 32;
-	} else if (b > 0xFFFFFFFF)
+	else if (b > 0xFFFFFFFF)
 		return EOVERFLOW;
 	inode->i_blocks = b & 0xFFFFFFFF;
 	return 0;
@@ -53,6 +54,9 @@ errcode_t ext2fs_iblk_sub_blocks(ext2_filsys fs, struct ext2_inode *inode,
 {
 	unsigned long long b = inode->i_blocks;
 
+	if (fs->super->s_feature_ro_compat & EXT4_FEATURE_RO_COMPAT_HUGE_FILE)
+		b += ((long long) inode->osd2.linux2.l_i_blocks_hi) << 32;
+
 	if (!(fs->super->s_feature_ro_compat &
 	      EXT4_FEATURE_RO_COMPAT_HUGE_FILE) ||
 	    !(inode->i_flags & EXT4_HUGE_FILE_FL))
@@ -63,11 +67,8 @@ errcode_t ext2fs_iblk_sub_blocks(ext2_filsys fs, struct ext2_inode *inode,
 
 	b -= num_blocks;
 
-	if (fs->super->s_feature_ro_compat &
-	    EXT4_FEATURE_RO_COMPAT_HUGE_FILE) {
-		b += ((long long) inode->osd2.linux2.l_i_blocks_hi) << 32;
+	if (fs->super->s_feature_ro_compat & EXT4_FEATURE_RO_COMPAT_HUGE_FILE)
 		inode->osd2.linux2.l_i_blocks_hi = b >> 32;
-	}
 	inode->i_blocks = b & 0xFFFFFFFF;
 	return 0;
 }
diff --git a/e2fsck/pass1.c b/e2fsck/pass1.c
--- a/e2fsck/pass1.c
+++ b/e2fsck/pass1.c
@@ -2055,7 +2055,7 @@ static void check_blocks(e2fsck_t ctx, struct problem_context *pctx,
 		pctx->num = pb.num_blocks;
 		if (fix_problem(ctx, PR_1_BAD_I_BLOCKS, pctx)) {
 			inode->i_blocks = pb.num_blocks;
-			inode->osd2.linux2.l_i_blocks_hi = 0;
+			inode->osd2.linux2.l_i_blocks_hi = pb.num_blocks >> 32;
 			dirty_inode++;
 		}
 		pctx->num = 0;
-- 
1.7.6.5
