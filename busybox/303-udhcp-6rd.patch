Subject: Draft of RFC5969 IPv6 6RD support
 Originally from OpenWRT
 TODO: OPTION_6RD parse optimization

 function                                             old     new   delta
 xmalloc_optname_optval                               944    1240    +296
 .rodata                                            84807   84832     +25
 dhcp_option_strings                                  203     211      +8
 dhcp_optflags                                         60      64      +4
 len_of_option_as_string                               10      11      +1
 dhcp_option_lengths                                   10      11      +1
 ------------------------------------------------------------------------------
 (add/remove: 0/0 grow/shrink: 6/0 up/down: 335/0)             Total: 335 bytes

diff --git a/networking/udhcp/Config.src b/networking/udhcp/Config.src
index 750a53a..b458a0e 100644
--- a/networking/udhcp/Config.src
+++ b/networking/udhcp/Config.src
@@ -113,6 +113,13 @@ config FEATURE_UDHCP_RFC3397
 	  search lists via option 119, specified in RFC 3397,
 	  and SIP servers option 120, specified in RFC 3361.
 
+config FEATURE_UDHCP_RFC5969
+	bool "Support for RFC5969 IPv6 Rapid Deployment (6RD)"
+	default y
+	depends on FEATURE_IPV6 && UDHCPC
+	help
+	  None.
+
 config UDHCPC_DEFAULT_SCRIPT
 	string "Absolute path to config script"
 	default "/usr/share/udhcpc/default.script"
diff --git a/networking/udhcp/common.c b/networking/udhcp/common.c
--- a/networking/udhcp/common.c
+++ b/networking/udhcp/common.c
@@ -56,7 +56,10 @@ const struct dhcp_optflag dhcp_optflags[] = {
 	{ OPTION_U16                              , 0x84 }, /* DHCP_VLAN_ID       */
 	{ OPTION_U8                               , 0x85 }, /* DHCP_VLAN_PRIORITY */
 #endif
+#if ENABLE_FEATURE_UDHCP_RFC5969
+	{ OPTION_6RD                              , 0x96 }, /* DHCP_COMCAST_6RD   */
	{ OPTION_6RD                              , 0xd4 }, /* DHCP_6RD           */
+#endif
 	{ OPTION_STATIC_ROUTES | OPTION_LIST      , 0xf9 }, /* DHCP_MS_STATIC_ROUTES */
 	{ OPTION_STRING                           , 0xfc }, /* DHCP_WPAD          */
 
@@ -119,6 +123,10 @@ const char dhcp_option_strings[] ALIGN1 =
 // is not handled yet by "string->option" conversion code:
 	"staticroutes" "\0"/* DHCP_STATIC_ROUTES  */
 	"msstaticroutes""\0"/* DHCP_MS_STATIC_ROUTES */
+#if ENABLE_FEATURE_UDHCP_RFC5969
+	"ip6rd" "\0"       /* DHCP_6RD            */
+	"ip6rd" "\0"       /* DHCP_COMCAST_6RD    */
+#endif
 	"wpad" "\0"        /* DHCP_WPAD           */
 	;
 
diff --git a/networking/udhcp/common.h b/networking/udhcp/common.h
--- a/networking/udhcp/common.h
+++ b/networking/udhcp/common.h
@@ -146,6 +149,8 @@ enum {
 //#define DHCP_SIP_SERVERS      0x78 /* RFC 3361. flag byte, then: 0: domain names, 1: IP addrs */
 //#define DHCP_STATIC_ROUTES    0x79 /* RFC 3442. (mask,ip,router) tuples */
 //#define DHCP_MS_STATIC_ROUTES 0xf9 /* Microsoft's pre-RFC 3442 code for 0x79? */
+//#define DHCP_6RD              0xd4 /* RFC 5969 6RD option */
+//#define DHCP_COMCAST_6RD      0x96 /* Comcast ISP RFC 5969 compatible 6RD option */
 //#define DHCP_WPAD             0xfc /* MSIE's Web Proxy Autodiscovery Protocol */
 #define DHCP_END                0xff
 
diff --git a/networking/udhcp/dhcpc.c b/networking/udhcp/dhcpc.c
--- a/networking/udhcp/dhcpc.c
+++ b/networking/udhcp/dhcpc.c
@@ -99,7 +99,9 @@ static const uint8_t len_of_option_as_st
 	[OPTION_IP              ] = sizeof("255.255.255.255 "),
 	[OPTION_IP_PAIR         ] = sizeof("255.255.255.255 ") * 2,
 	[OPTION_STATIC_ROUTES   ] = sizeof("255.255.255.255/32 255.255.255.255 "),
+#if ENABLE_FEATURE_UDHCP_RFC5969
 	[OPTION_6RD             ] = sizeof("32 128 ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff 255.255.255.255 "),
+#endif
 	[OPTION_STRING          ] = 1,
 	[OPTION_STRING_HOST     ] = 1,
 #if ENABLE_FEATURE_UDHCP_RFC3397
@@ -295,6 +297,7 @@ static NOINLINE char *xmalloc_optname_op
 
 			return ret;
 		}
+#if ENABLE_FEATURE_UDHCP_RFC5969
 		case OPTION_6RD:
 			/* Option binary format (see RFC 5969):
 			 *  0                   1                   2                   3
@@ -342,6 +345,7 @@ static NOINLINE char *xmalloc_optname_op
 			}
 
 			return ret;
+#endif
 #if ENABLE_FEATURE_UDHCP_RFC3397
 		case OPTION_DNS_STRING:
 			/* unpack option into dest; use ret for prefix (i.e., "optname=") */
