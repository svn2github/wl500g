From c133fa66f37d69efb0d2e10ad2e068564933d92c Mon Sep 17 00:00:00 2001
From: Denys Vlasenko <vda.linux@googlemail.com>
Date: Fri, 17 May 2013 13:13:38 +0000
Subject: udhcpc: fix a problem with binary-encoded options #2
---

From b443a3780d5a9f8c65c5690b7f5f4bfc2ea8134b Mon Sep 17 00:00:00 2001
From: Denys Vlasenko <vda.linux@googlemail.com>
Date: Fri, 17 May 2013 13:19:47 +0000
Subject: udhcp: code shrink
---

diff --git a/networking/udhcp/common.c b/networking/udhcp/common.c
--- a/networking/udhcp/common.c
+++ b/networking/udhcp/common.c
@@ -394,20 +394,23 @@ static NOINLINE void attach_option(
 		char *buffer,
 		int length)
 {
-	struct option_set *existing, *new, **curr;
-	char *allocated = NULL;
+	struct option_set *existing;
+	char *allocated;
 
-	existing = udhcp_find_option(*opt_list, optflag->code);
-	if (!existing) {
-		log2("Attaching option %02x to list", optflag->code);
-		allocated = allocate_tempopt_if_needed(optflag, buffer, &length);
+	allocated = allocate_tempopt_if_needed(optflag, buffer, &length);
 #if ENABLE_FEATURE_UDHCP_RFC3397
-		if ((optflag->flags & OPTION_TYPE_MASK) == OPTION_DNS_STRING) {
-			/* reuse buffer and length for RFC1035-formatted string */
-			allocated = buffer = (char *)dname_enc(NULL, 0, buffer, &length);
-		}
+	if ((optflag->flags & OPTION_TYPE_MASK) == OPTION_DNS_STRING) {
+		/* reuse buffer and length for RFC1035-formatted string */
+		allocated = buffer = (char *)dname_enc(NULL, 0, buffer, &length);
+	}
 #endif
+
+	existing = udhcp_find_option(*opt_list, optflag->code);
+	if (!existing) {
+		struct option_set *new, **curr;
+
 		/* make a new option */
+		log2("Attaching option %02x to list", optflag->code);
 		new = xmalloc(sizeof(*new));
 		new->data = xmalloc(length + OPT_DATA);
 		new->data[OPT_CODE] = optflag->code;
@@ -428,14 +431,7 @@ static NOINLINE void attach_option(
 
 		/* add it to an existing option */
 		log2("Attaching option %02x to existing member of list", optflag->code);
-		allocated = allocate_tempopt_if_needed(optflag, buffer, &length);
 		old_len = existing->data[OPT_LEN];
-#if ENABLE_FEATURE_UDHCP_RFC3397
-		if ((optflag->flags & OPTION_TYPE_MASK) == OPTION_DNS_STRING) {
-			/* reuse buffer and length for RFC1035-formatted string */
-			allocated = buffer = (char *)dname_enc(existing->data + OPT_DATA, old_len, buffer, &length);
-		}
-#endif
 		if (old_len + length < 255) {
 			/* actually 255 is ok too, but adding a space can overlow it */
 
@@ -447,7 +443,7 @@ static NOINLINE void attach_option(
 				existing->data[OPT_DATA + old_len] = ' ';
 				old_len++;
 			}
-			memcpy(existing->data + OPT_DATA + old_len, buffer, length);
+			memcpy(existing->data + OPT_DATA + old_len, (allocated ? allocated : buffer), length);
 			existing->data[OPT_LEN] = old_len + length;
 		} /* else, ignore the data, we could put this in a second option in the future */
 	} /* else, ignore the new data */
--
cgit v0.9.1
