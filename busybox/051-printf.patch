printf: accept negative numbers for %x; ash: overflowed numbers are 0

diff -urBp busybox-1.13.4/coreutils/printf.c busybox/coreutils/printf.c
--- busybox-1.13.4/coreutils/printf.c	2009-04-15 04:09:42.000000000 +0400
+++ busybox/coreutils/printf.c	2009-06-05 20:28:47.000000000 +0400
@@ -78,6 +78,14 @@ static int multiconvert(const char *arg,
 static void FAST_FUNC conv_strtoul(const char *arg, void *result)
 {
 	*(unsigned long*)result = bb_strtoul(arg, NULL, 0);
+	/* both coreutils 6.10 and bash 3.2:
+	 * $ printf '%x\n' -2
+	 * fffffffffffffffe
+	 * Mimic that:
+	 */
+	if (errno) {
+		*(unsigned long long*)result = bb_strtol(arg, NULL, 0);
+	}
 }
 static void FAST_FUNC conv_strtol(const char *arg, void *result)
 {
diff -urBp busybox-1.13.4/shell/ash.c busybox/shell/ash.c
--- busybox-1.13.4/shell/ash.c	2009-04-15 04:08:27.000000000 +0400
+++ busybox/shell/ash.c	2009-06-05 20:30:51.000000000 +0400
@@ -13365,11 +13365,14 @@ arith(const char *expr, int *perrcode)
 		}
 		if (isdigit(arithval)) {
 			numstackptr->var = NULL;
+			errno = 0;
 #if ENABLE_ASH_MATH_SUPPORT_64
 			numstackptr->val = strtoll(expr, (char **) &expr, 0);
 #else
 			numstackptr->val = strtol(expr, (char **) &expr, 0);
 #endif
+			if (errno)
+				numstackptr->val = NULL; /* bash compat */
 			goto num;
 		}
 		for (p = op_tokens; ; p++) {
