From 499597d6efb0de5bb6d6f52bda1f348478d7f5a9
From: Denys Vlasenko
Date: Tue, 10 Jan 2012 23:37:17 +0000
Subject: mdev: do not treat non-leading '#' chars as start of comment. Closes 4676

Signed-off-by: Denys Vlasenko <vda.linux@googlemail.com>
---

diff --git a/include/libbb.h b/include/libbb.h
--- a/include/libbb.h
+++ b/include/libbb.h
@@ -1195,13 +1195,14 @@ enum {
 	PARSE_MIN_DIE   = 0x00100000, // die if < min tokens found
 	// keep a copy of current line
 	PARSE_KEEP_COPY = 0x00200000 * ENABLE_FEATURE_CROND_D,
-//	PARSE_ESCAPE    = 0x00400000, // process escape sequences in tokens
+	PARSE_EOL_COMMENTS = 0x00400000, // comments are recognized even if they aren't the first char
 	// NORMAL is:
 	// * remove leading and trailing delimiters and collapse
 	//   multiple delimiters into one
 	// * warn and continue if less than mintokens delimiters found
 	// * grab everything into last token
-	PARSE_NORMAL    = PARSE_COLLAPSE | PARSE_TRIM | PARSE_GREEDY,
+	// * comments are recognized even if they aren't the first char
+	PARSE_NORMAL    = PARSE_COLLAPSE | PARSE_TRIM | PARSE_GREEDY | PARSE_EOL_COMMENTS,
 };
 typedef struct parser_t {
 	FILE *fp;
diff --git a/libbb/parse_config.c b/libbb/parse_config.c
--- a/libbb/parse_config.c
+++ b/libbb/parse_config.c
@@ -204,7 +204,7 @@ int FAST_FUNC config_read(parser_t *parser, char **tokens, unsigned flags, const
 			line += strcspn(line, delims[0] ? delims : delims + 1);
 		} else {
 			/* Combining, find comment char if any */
-			line = strchrnul(line, delims[0]);
+			line = strchrnul(line, PARSE_EOL_COMMENTS ? delims[0] : '\0');
 
 			/* Trim any extra delimiters from the end */
 			if (flags & PARSE_TRIM) {
diff --git a/util-linux/mdev.c b/util-linux/mdev.c
--- a/util-linux/mdev.c
+++ b/util-linux/mdev.c
@@ -214,8 +214,9 @@ static void make_device(char *path, int 
 		keep_matching = 0;
 		mode = 0660;
 
+		/* No PARSE_EOL_COMMENTS, because command may contain '#' chars */
 		if (ENABLE_FEATURE_MDEV_CONF
-		 && config_read(parser, tokens, 4, 3, "# \t", PARSE_NORMAL)
+		 && config_read(parser, tokens, 4, 3, "# \t", PARSE_NORMAL & ~PARSE_EOL_COMMENTS)
 		) {
 			char *val;
 			char *str_to_match;
--
cgit v0.9.0.1-2-gef13
