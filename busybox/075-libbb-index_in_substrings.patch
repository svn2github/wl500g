From 8a659f6ff9a364fb48fbfa95d70d09134b579627
From: Denys Vlasenko
Date: Fri, 02 Apr 2010 22:52:16 +0000
Subject: libbb: make index_in_substrings return -1 on ambiguous matches

function                                             old     new   delta
index_in_substrings                                   67      93     +26

Signed-off-by: Denys Vlasenko <vda.linux@googlemail.com>
---
diff --git a/libbb/compare_string_array.c b/libbb/compare_string_array.c
index 43c59e8..599449f 100644
--- a/libbb/compare_string_array.c
+++ b/libbb/compare_string_array.c
@@ -53,19 +53,24 @@ int FAST_FUNC index_in_substr_array(const char *const string_array[], const char
 
 int FAST_FUNC index_in_substrings(const char *strings, const char *key)
 {
-	int len = strlen(key);
+	int matched_idx = -1;
+	const int len = strlen(key);
 
 	if (len) {
 		int idx = 0;
 		while (*strings) {
 			if (strncmp(strings, key, len) == 0) {
-				return idx;
+				if (strings[len] == '\0')
+					return idx; /* exact match */
+				if (matched_idx >= 0)
+					return -1; /* ambiguous match */
+				matched_idx = idx;
 			}
 			strings += strlen(strings) + 1; /* skip NUL */
 			idx++;
 		}
 	}
-	return -1;
+	return matched_idx;
 }
 
 const char* FAST_FUNC nth_string(const char *strings, int n)
@@ -76,3 +81,15 @@ const char* FAST_FUNC nth_string(const char *strings, int n)
 	}
 	return strings;
 }
+
+#ifdef UNUSED_SO_FAR /* only brctl.c needs it yet */
+/* Returns 0 for no, 1 for yes or a negative value on error.  */
+smallint FAST_FUNC yesno(const char *str)
+{
+	static const char no_yes[] ALIGN1 =
+		"0\0" "off\0" "no\0"
+		"1\0" "on\0" "yes\0";
+	int ret = index_in_substrings(no_yes, str);
+	return ret / 3;
+}
+#endif
--
cgit v0.8.2.1
