Ref.: http://lists.busybox.net/pipermail/busybox/2011-March/075325.html

The latest busybox fdisk utility with GPT enabled displays the wrong
size for the disk and partitions.  This appears to be because
smart_ulltoa5() is expecting bytes, where gpt_list_table() is sending
sectors.  The attached patch fixes it for me.

-Justin

--- busybox-1.18.4/util-linux/fdisk_gpt.c	2011-03-28 13:30:59.000000000 +0000
+++ busybox-1.18.4-jm/util-linux/fdisk_gpt.c	2011-03-29 01:56:45.000000000 +0000
@@ -95,7 +95,8 @@ gpt_list_table(int xtra UNUSED_PARAM)
 
 	numstr6[5] = '\0';
 
-	smart_ulltoa5(total_number_of_sectors, numstr6, " KMGTPEZY");
+	smart_ulltoa5((unsigned long long)total_number_of_sectors * sector_size,
+		numstr6, " KMGTPEZY");
 	printf("Disk %s: %llu sectors, %s\n", disk_device,
 		(unsigned long long)total_number_of_sectors,
 		numstr6);
@@ -112,7 +113,8 @@ gpt_list_table(int xtra UNUSED_PARAM)
 	for (i = 0; i < n_parts; i++) {
 		gpt_partition *p = gpt_part(i);
 		if (p->lba_start) {
-			smart_ulltoa5(1 + SWAP_LE64(p->lba_end) - SWAP_LE64(p->lba_start),
+			smart_ulltoa5((1 + SWAP_LE64(p->lba_end)
+				- SWAP_LE64(p->lba_start)) * sector_size,
 				numstr6, " KMGTPEZY");
 			printf("%4u %15llu %15llu %11s   %04x  ",
 				i + 1,
diff --git a/util-linux/fdisk.c b/util-linux/fdisk.c
--- a/util-linux/fdisk.c
+++ b/util-linux/fdisk.c
@@ -423,8 +423,8 @@ static sector_t bb_BLKGETSIZE_sectors(in
 	unsigned long longsectors;
 
 	if (ioctl(fd, BLKGETSIZE64, &v64) == 0) {
-		/* Got bytes, convert to 512 byte sectors */
-		v64 >>= 9;
+		/* Got bytes, convert to sectors */
+		v64 /= sector_size;
 		if (v64 != (sector_t)v64) {
  ret_trunc:
 			/* Not only DOS, but all other partition tables
@@ -1939,7 +1939,7 @@ check_consistency(const struct partition
 static void
 list_disk_geometry(void)
 {
-	ullong bytes = ((ullong)total_number_of_sectors << 9);
+	ullong bytes = ((ullong)total_number_of_sectors * sector_size);
 	long megabytes = bytes / 1000000;
 
 	if (megabytes < 10000)
@@ -1952,7 +1952,7 @@ list_disk_geometry(void)
 		   g_heads, g_sectors, g_cylinders);
 	if (units_per_sector == 1)
 		printf(", total %"SECT_FMT"u sectors",
-			total_number_of_sectors / (sector_size/512));
+			total_number_of_sectors);
 	printf("\nUnits = %s of %u * %u = %u bytes\n\n",
 		str_units(PLURAL),
 		units_per_sector, sector_size, units_per_sector * sector_size);
-- 
