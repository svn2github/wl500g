From a3aa3e309506ea96fa8f7546f6b22fa85263a934
From: Denys Vlasenko
Date: Fri, 11 Dec 2009 11:36:10 +0000
Subject: wget: check for close success; fix chunked; do not bother to send QUIT to ftp

Also, random fixes to use %u for unsigned quantities. -14 bytes in wget.

Signed-off-by: Denys Vlasenko <vda.linux@googlemail.com>
---
diff --git a/networking/wget.c b/networking/wget.c
index 8ca6def..64553d4 100644
--- a/networking/wget.c
+++ b/networking/wget.c
@@ -420,7 +416,7 @@ static FILE* prepare_ftp_session(FILE **dfpp, struct host_info *target, len_and_
 	*dfpp = open_socket(lsa);
 
 	if (beg_range) {
-		sprintf(buf, "REST %"OFF_FMT"d", beg_range);
+		sprintf(buf, "REST %"OFF_FMT"u", beg_range);
 		if (ftpcmd(buf, NULL, sfp, buf) == 350)
 			content_len -= beg_range;
 	}
@@ -460,12 +456,18 @@ static void NOINLINE retrieve_file_data(FILE *dfp, int output_fd)
 
 	/* Loops only if chunked */
 	while (1) {
-		while (content_len > 0 || !G.got_clen) {
+		while (1) {
 			int n;
-			unsigned rdsz = sizeof(buf);
-
-			if (content_len < sizeof(buf) && (G.chunked || G.got_clen))
-				rdsz = (unsigned)content_len;
+			unsigned rdsz;
+
+			rdsz = sizeof(buf);
+			if (G.got_clen) {
+				if (content_len < sizeof(buf)) {
+					if ((int)content_len <= 0)
+						break;
+					rdsz = (unsigned)content_len;
+				}
+			}
 			n = safe_fread(buf, rdsz, dfp);
 			if (n <= 0) {
 				if (ferror(dfp)) {
@@ -488,6 +490,7 @@ static void NOINLINE retrieve_file_data(FILE *dfp, int output_fd)
 		/* FIXME: error check? */
 		if (content_len == 0)
 			break; /* all done! */
+		G.got_clen = 1;
 	}
 
 	if (!(option_mask32 & WGET_OPT_QUIET))
@@ -684,7 +687,7 @@ int wget_main(int argc UNUSED_PARAM, char **argv)
 #endif
 
 		if (beg_range)
-			fprintf(sfp, "Range: bytes=%"OFF_FMT"d-\r\n", beg_range);
+			fprintf(sfp, "Range: bytes=%"OFF_FMT"u-\r\n", beg_range);
 #if ENABLE_FEATURE_WGET_LONG_OPTIONS
 		if (extra_headers)
 			fputs(extra_headers, sfp);
@@ -841,13 +844,14 @@ However, in real world it was observed that some web servers
 	}
 
 	retrieve_file_data(dfp, output_fd);
+	close(output_fd);
 
 	if (dfp != sfp) {
 		/* It's ftp. Close it properly */
 		fclose(dfp);
 		if (ftpcmd(NULL, NULL, sfp, buf) != 226)
 			bb_error_msg_and_die("ftp error: %s", sanitize_string(buf+4));
-		ftpcmd("QUIT", NULL, sfp, buf);
+		/* ftpcmd("QUIT", NULL, sfp, buf); - why bother? */
 	}
 
 	return EXIT_SUCCESS;
--
cgit v0.8.2.1
