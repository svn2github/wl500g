diff -urBp libusb-1.0.2/libusb/os/linux_usbfs.c libusb10/libusb/os/linux_usbfs.c
--- libusb-1.0.2/libusb/os/linux_usbfs.c	2009-06-11 00:41:26.000000000 +0400
+++ libusb10/libusb/os/linux_usbfs.c	2009-08-24 21:24:03.000000000 +0400
@@ -1782,6 +1782,15 @@ static int handle_bulk_completion(struct
 
 	tpriv->num_retired++;
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,0)
+	/* Workaround for 2.4 UHCI interrupt transfers */
+	if ((urb->status == -ECONNABORTED || urb->status == -ECONNRESET) &&
+			urb->type == USBFS_URB_TYPE_INTERRUPT &&
+			urb->actual_length > 0) {
+		urb->status = 0;
+	}
+#endif
+
 	if (tpriv->reap_action != NORMAL) {
 		/* cancelled, submit_fail, or completed early */
 		usbi_dbg("abnormal reap: urb status %d", urb->status);
diff -urBp libusb-1.0.2/libusb/os/linux_usbfs.h libusb10/libusb/os/linux_usbfs.h
--- libusb-1.0.2/libusb/os/linux_usbfs.h	2008-07-16 18:17:57.000000000 +0400
+++ libusb10/libusb/os/linux_usbfs.h	2009-06-05 21:31:31.000000000 +0400
@@ -21,7 +21,13 @@
 #ifndef __LIBUSB_USBFS_H__
 #define __LIBUSB_USBFS_H__
 
-#define SYSFS_DEVICE_PATH "/sys/bus/usb/devices"
+#include <linux/version.h>
+
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0)
+ #define SYSFS_DEVICE_PATH "/sys/bus/usb/devices"
+#else
+ #define SYSFS_DEVICE_PATH "/proc/bus/usb/devices"
+#endif
 
 struct usbfs_ctrltransfer {
 	/* keep in sync with usbdevice_fs.h:usbdevfs_ctrltransfer */
