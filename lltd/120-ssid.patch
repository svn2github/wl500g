diff -BurpN lltd.orig/src/lld2d_types.h lltd/src/lld2d_types.h
--- lltd.orig/src/lld2d_types.h	2006-08-03 04:47:48.000000000 +0000
+++ lltd/src/lld2d_types.h	2010-07-04 17:19:38.000000000 +0000
@@ -31,6 +31,10 @@ typedef struct in6_addr ipv6addr_t;
 /* our own (hopefully portable) 2-byte char type */
 typedef uint16_t ucs2char_t;
 
+typedef struct {
+    uint8_t ssid[32];
+    uint8_t ssidLen;
+} __attribute__ ((packed)) ssid_t;
 
 /* Process-level event management structure for io & timers */
 
@@ -95,4 +99,12 @@ typedef enum {
 
 #define NUM_SEES 1024	/* how many recvee_desc_t we keep */
 
+#define WPM_UNKNOW          0x00
+#define WPM_FHSS_24G        0x01
+#define WPM_DSSS_24G        0x02
+#define WPM_IR_BASEDBAND    0x03
+#define WPM_OFDM_5G         0x04
+#define WPM_HRDSSS          0x05
+#define WPM_ERP             0x06
+
 #endif	/*** LLD2D_TYPES_H ***/
diff -BurpN lltd.orig/src/tlv.c lltd/src/tlv.c
--- lltd.orig/src/tlv.c	2006-10-16 06:24:56.000000000 +0000
+++ lltd/src/tlv.c	2010-07-04 12:22:56.000000000 +0000
@@ -540,7 +540,7 @@ write_comptbl_t(int number, void *data, 
     *buf++ = (uint8_t)0;
     
     /* then do the sub-tlvs in order, starting with the bridge component */
-    if (Bridge_Component != 0xFF)
+    if (ctbl->bridge_behavior != 0xFF)
     {
         *buf++ = (uint8_t) Bridge_Component;        // type
         *buf++ = 1;                                 // length
@@ -572,7 +572,7 @@ write_comptbl_t(int number, void *data, 
     }
 
     /* Finally, do the switch component */
-    if (Switch_Component != 0xFFFFFFFF)
+    if (&ctbl->link_speed != 0xFFFFFFFF)
     {
         *buf++ = (uint8_t) Switch_Component;        // type
         *buf++ = 4;                                 // length
@@ -591,6 +591,39 @@ write_comptbl_t(int number, void *data, 
     return bytes_used;
 }
 
+static int
+write_ssid_t(int number, void *data, uint8_t *buf, int bytes_free, bool_t isHello, bool_t isLarge, size_t offset)
+{
+    if (bytes_free < (int)(2 + sizeof(ssid_t)))
+	    return 0;
+
+    IF_TRACED(TRC_TLVINFO)
+        dbgprintf("write_ssid_t(%s): ssid=%s\n", isLarge?"LTLV":"TLV",
+                  SSID_PRINT(((ssid_t*)data)));
+    END_TRACE
+
+    if (isHello)
+    {
+        /* write hdr in Hello-tlv format */
+        *buf = (uint8_t)number;
+        if (isLarge)
+        {
+            *(buf+1) = 0;
+            return 2;
+        } else {
+            *(buf+1) = SSID_LEN((ssid_t*)data);
+        }
+    } else {
+        /* write in QueryLargeTlvResp LTLV format */
+        /* replace: *(uint16_t*)buf = htons(sizeof(etheraddr_t)); with: */
+        g_short_reorder_buffer = htons(SSID_LEN((ssid_t*)data));
+        memcpy(buf, &g_short_reorder_buffer, 2);
+    }
+    /* replace: *((etheraddr_t*)(buf+2)) = *(etheraddr_t*)data; with: */
+    memcpy(buf+2, data, SSID_LEN((ssid_t*)data));
+    return SSID_LEN((ssid_t*)data) + 2;
+}
+
 
 void *(NotUsed[]) = {write_uint16_t,write_ipv6addr_t};
 
diff -BurpN lltd.orig/src/tlvdef.h lltd/src/tlvdef.h
--- lltd.orig/src/tlvdef.h	2006-09-14 05:27:18.000000000 +0000
+++ lltd/src/tlvdef.h	2010-07-04 11:28:54.000000000 +0000
@@ -28,7 +28,7 @@
     TLVDEF( uint32_t,     physical_medium,     ,   3,  Access_unset, TRUE )
     TLVDEF( uint8_t,      wireless_mode,       ,   4,  Access_unset, TRUE )
     TLVDEF( etheraddr_t,  bssid,               ,   5,  Access_unset, TRUE )
-//    TLVDEF( ssid_t,       ssid,                ,   6,  Access_unset, TRUE )
+    TLVDEF( ssid_t,       ssid,                ,   6,  Access_unset, TRUE )
     TLVDEF( ipv4addr_t,   ipv4addr,            ,   7,  Access_unset, TRUE )
     TLVDEF( ipv6addr_t,   ipv6addr,            ,   8,  Access_unset, TRUE )
     TLVDEF( uint16_t,     max_op_rate,         ,   9,  Access_unset, TRUE )
diff -BurpN lltd.orig/src/util.h lltd/src/util.h
--- lltd.orig/src/util.h	2006-08-03 04:47:48.000000000 +0000
+++ lltd/src/util.h	2010-07-04 12:23:42.000000000 +0000
@@ -94,6 +94,9 @@ extern void util_use_syslog(void);
 #define ETHERADDR_PRINT(e) (e)->a[0], (e)->a[1], (e)->a[2],\
                            (e)->a[3], (e)->a[4], (e)->a[5]
 
+#define SSID_PRINT(e)   (e)->ssid
+#define SSID_LEN(e)     (e)->ssidLen
+
 #define timeval_add_ms(tv, ms) \
 do {						\
     (tv)->tv_usec += (ms) * 1000;		\
