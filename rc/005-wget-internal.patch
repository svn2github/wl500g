--- router/rc/Makefile	2009-08-24 19:58:40.000000000 +0400
+++ gateway/rc/Makefile	2009-08-24 19:58:46.000000000 +0400
@@ -19,7 +19,7 @@
 CFLAGS	+= -s -O2 $(EXTRACFLAGS)
 LDFLAGS	+= -L$(TOP)/nvram -lnvram -L$(TOP)/shared -lshared -lcrypt
 
-OBJS := rc.o init.o interface.o network.o services.o udhcpc.o ppp.o http.o \
+OBJS := rc.o init.o interface.o network.o services.o udhcpc.o ppp.o \
     stats.o crc.o mtd.o common_ex.o network_ex.o firewall_ex.o services_ex.o \
     manu_ex.o http_ex.o watchdog.o sendalarm.o dns.o dns_decode.o udhcpc_ex.o \
     ntp.o bigpond.o qos.o rcamd.o waveserver.o
--- router/rc/http_ex.c	2004-11-11 10:32:05.000000000 +0300
+++ gateway/rc/http_ex.c	2009-08-24 19:14:57.000000000 +0400
@@ -58,7 +58,8 @@
 
 enum {
 	METHOD_GET,
-	METHOD_POST
+	METHOD_POST,
+	METHOD_CHECK,
 };
 
 static int 
@@ -87,7 +87,6 @@ wget(int method, const char *server, cha
 	int fd;
 	FILE *fp;
 	struct sockaddr_in sin;
-	struct stat fstatus;
 
 	int chunked = 0, len = 0;
 
@@ -125,10 +126,8 @@ wget(int method, const char *server, cha
 	dprintf("Connecting to %s:%u...\n", host, port);
 	if ((fd = socket(AF_INET, SOCK_STREAM, 0)) < 0 ||
 	    connect(fd, (struct sockaddr *) &sin, sizeof(sin)) < 0
-#ifdef REMOVE
 		 ||
-	    !(fp = fdopen(fd, "r+"))
-#endif
+	    (!(method == METHOD_CHECK) && !(fp = fdopen(fd, "r+")))
 		) {
 		perror(host);
 		if (fd >= 0)
@@ -164,14 +163,15 @@ wget(int method, const char *server, cha
 		// get message anyway
 		close(fd);
 		return 1;
-#ifdef REMOVE
+		if (!(method == METHOD_CHECK)) {
 			for (s = line; *s && !isspace((int)*s); s++);
 			for (; isspace((int)*s); s++);
 			switch (atoi(s)) {
 			case 200: if (offset) goto done; else break;
 			case 206: if (offset) break; else goto done;
 			default: goto done;
-#endif
+			}
+		}
 	}
 	else
 	{
@@ -179,7 +179,8 @@ wget(int method, const char *server, cha
 		return 0;
 	}
 
-#ifdef REMOVE
+	if ((method == METHOD_CHECK)) return 0;
+
 	/* Parse headers */
 	while (fgets(line, sizeof(line), fp)) {
 		dprintf("%s", line);
@@ -210,12 +211,23 @@ wget(int method, const char *server, cha
 	fflush(fp);
 	fclose(fp);
 	return len;
-#endif
 }
 
 int
 http_check(const char *server, char *buf, size_t count, off_t offset)
 {
+	return wget(METHOD_CHECK, server, buf, count, offset);
+}
+
+int
+http_get(const char *server, char *buf, size_t count, off_t offset)
+{
 	return wget(METHOD_GET, server, buf, count, offset);
 }
 
+int
+http_post(const char *server, char *buf, size_t count)
+{
+        /* No continuation generally possible with POST */
+        return wget(METHOD_POST, server, buf, count, 0);
+}
