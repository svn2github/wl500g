summary: Fix alignment/padding for tc_stats structure.

 tc fails to display the statistics of a qdisc:
 
 $ tc -s qdisc
 qdisc tbf 3: dev eth0 rate 100Kbit burst 10Kb peakrate 128Kbit minburst
 1513b lat 1.2s
 statistics truncated

details:
 This happens because the __u64 in the tc_stats structure
 This causes the structure to be padded out to a multiple of 8 bytes on
 sparc/MIPS architectures, since they wants 64 bit integers to be aligned.
 In the kernel, there is this extra *lock structure member, and the kernel
 returns the data it is carefull to truncate it off.

Author of original patch: "Nicolas S. Dade" <ndade@nsd.dyndns.org>
Modified-by: Leonid Lisovskiy <lly.dev@gmail.com>

diff -urBp iproute2.orig/tc/tc_class.c iproute2/tc/tc_class.c
--- iproute2.orig/tc/tc_class.c	2002-01-15 07:18:42.000000000 +0300
+++ iproute2/tc/tc_class.c	2009-08-17 21:00:21.000000000 +0400
@@ -241,7 +241,7 @@ int print_class(struct sockaddr_nl *who,
 	fprintf(fp, "\n");
 	if (show_stats) {
 		if (tb[TCA_STATS]) {
-			if (RTA_PAYLOAD(tb[TCA_STATS]) < sizeof(struct tc_stats))
+			if (RTA_PAYLOAD(tb[TCA_STATS]) < TC_STATS_STRUC_SIZE)
 				fprintf(fp, "statistics truncated");
 			else {
 				struct tc_stats st;
diff -urBp iproute2.orig/tc/tc_filter.c iproute2/tc/tc_filter.c
--- iproute2.orig/tc/tc_filter.c	2002-01-15 14:15:47.000000000 +0300
+++ iproute2/tc/tc_filter.c	2009-08-17 21:00:30.000000000 +0400
@@ -250,7 +250,7 @@ int print_filter(struct sockaddr_nl *who
 
 	if (show_stats) {
 		if (tb[TCA_STATS]) {
-			if (RTA_PAYLOAD(tb[TCA_STATS]) < sizeof(struct tc_stats))
+			if (RTA_PAYLOAD(tb[TCA_STATS]) < TC_STATS_STRUC_SIZE)
 				fprintf(fp, "statistics truncated");
 			else {
 				struct tc_stats st;
diff -urBp iproute2.orig/tc/tc_qdisc.c iproute2/tc/tc_qdisc.c
--- iproute2.orig/tc/tc_qdisc.c	2002-01-15 14:15:23.000000000 +0300
+++ iproute2/tc/tc_qdisc.c	2009-08-17 21:01:59.000000000 +0400
@@ -245,7 +245,7 @@ int print_qdisc(struct sockaddr_nl *who,
 	fprintf(fp, "\n");
 	if (show_stats) {
 		if (tb[TCA_STATS]) {
-			if (RTA_PAYLOAD(tb[TCA_STATS]) < sizeof(struct tc_stats))
+			if (RTA_PAYLOAD(tb[TCA_STATS]) < TC_STATS_STRUC_SIZE)
 				fprintf(fp, "statistics truncated");
 			else {
 				struct tc_stats st;
diff -urBp iproute2.orig/tc/tc_util.h iproute2/tc/tc_util.h
--- iproute2.orig/tc/tc_util.h	2000-04-16 21:42:55.000000000 +0400
+++ iproute2/tc/tc_util.h	2009-08-17 20:59:47.000000000 +0400
@@ -5,6 +5,8 @@
 #include <linux/pkt_cls.h>
 #include "tc_core.h"
 
+#define TC_STATS_STRUC_SIZE	(offsetof(struct tc_stats,backlog)+sizeof(((struct tc_stats*)0)->backlog))
+
 struct qdisc_util
 {
 	struct qdisc_util *next;
