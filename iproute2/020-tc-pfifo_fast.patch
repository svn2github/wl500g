Backport pfifo_fast from iproute2-2.6.11-050330

Also incorporate change from OpenWRT trunk #17296:
 sched: allow user space to create pfifo_fast qdiscs on virtual interfaces,
  allow pfifo_fast qdiscs to have filters and filter actions - useful for
  controlling packet classification into wme classes

diff -urBp iproute2.orig/tc/q_fifo.c iproute2/tc/q_fifo.c
--- iproute2.orig/tc/q_fifo.c	2000-04-16 21:42:54.000000000 +0400
+++ iproute2/tc/q_fifo.c	2009-08-17 21:42:00.000000000 +0400
@@ -99,3 +99,13 @@ struct qdisc_util pfifo_util = {
 	fifo_print_opt,
 	fifo_print_xstats,
 };
+
+extern int prio_print_opt(struct qdisc_util *qu, FILE *f, struct rtattr *opt);
+extern int parse_noqopt(struct qdisc_util *qu, int argc, char **argv, struct nlmsghdr *n);
+struct qdisc_util pfifo_fast_util = {
+	NULL,
+	"pfifo_fast",
+	fifo_parse_opt,
+	prio_print_opt,
+	fifo_print_xstats,
+};
diff -urBp iproute2.orig/tc/q_prio.c iproute2/tc/q_prio.c
--- iproute2.orig/tc/q_prio.c	2000-04-16 21:42:54.000000000 +0400
+++ iproute2/tc/q_prio.c	2009-08-17 21:42:44.000000000 +0400
@@ -94,7 +94,7 @@ static int prio_parse_opt(struct qdisc_u
 	return 0;
 }
 
-static int prio_print_opt(struct qdisc_util *qu, FILE *f, struct rtattr *opt)
+int prio_print_opt(struct qdisc_util *qu, FILE *f, struct rtattr *opt)
 {
 	int i;
 	struct tc_prio_qopt *qopt;
diff -urBp iproute2.orig/tc/tc_qdisc.c iproute2/tc/tc_qdisc.c
--- iproute2.orig/tc/tc_qdisc.c	2009-08-17 21:01:59.000000000 +0400
+++ iproute2/tc/tc_qdisc.c	2009-08-17 21:46:37.000000000 +0400
@@ -235,7 +235,11 @@ int print_qdisc(struct sockaddr_nl *who,
 	if (t->tcm_info != 1) {
 		fprintf(fp, "refcnt %d ", t->tcm_info);
 	}
-	q = get_qdisc_kind(RTA_DATA(tb[TCA_KIND]));
+	/* pfifo_fast is generic enough to warrant the hardcoding --JHS */
+	if (0 == strcmp("pfifo_fast", RTA_DATA(tb[TCA_KIND])))
+		q = get_qdisc_kind("prio");
+	else
+		q = get_qdisc_kind(RTA_DATA(tb[TCA_KIND]));
 	if (tb[TCA_OPTIONS]) {
 		if (q)
 			q->print_qopt(q, fp, tb[TCA_OPTIONS]);
